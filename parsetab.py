
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ASIG BOOLEAN CADENA COMA DO ENTERO FUNCTION ID IF INT LCORCH LLLAVE LPAREN MENORQUE MMENOS NEG PRINT PROMPT PUNTO PYC RCORCH RETURN RLLAVE RPAREN STRING SUM VAR WHILEB : VAR T ID PYCB : SS : ID ASIG E PYCS : RETURN E PYCT : STRINGT : BOOLEANT : INTS : PRINT LPAREN E RPAREN PYCS : PROMPT LPAREN E RPAREN PYCS : MMENOS ID PYCE : NEG RE : RR : U MENORQUE UR : UU : V SUM UU : VV : ENTEROV : IDV : CADENAV : LPAREN E RPARENempty :'
    
_lr_action_items = {'ENTERO':([3,9,16,18,24,25,29,31,],[14,14,14,14,14,14,14,14,]),'PYC':([14,15,17,19,20,21,22,23,27,30,35,36,38,39,40,41,],[-17,-19,-16,-14,32,-12,-18,33,37,-11,42,43,-20,-15,-13,44,]),'PROMPT':([0,],[1,]),'CADENA':([3,9,16,18,24,25,29,31,],[15,15,15,15,15,15,15,15,]),'$end':([4,5,32,33,37,42,43,44,],[-2,0,-4,-10,-1,-3,-9,-8,]),'LPAREN':([1,3,7,9,16,18,24,25,29,31,],[9,16,24,16,16,16,16,16,16,16,]),'SUM':([14,15,17,22,38,],[-17,-19,29,-18,-20,]),'BOOLEAN':([2,],[12,]),'NEG':([3,9,16,24,25,],[18,18,18,18,18,]),'RETURN':([0,],[3,]),'MMENOS':([0,],[6,]),'VAR':([0,],[2,]),'INT':([2,],[10,]),'MENORQUE':([14,15,17,19,22,38,39,],[-17,-19,-16,31,-18,-20,-15,]),'PRINT':([0,],[7,]),'ASIG':([8,],[25,]),'RPAREN':([14,15,17,19,21,22,26,28,30,34,38,39,40,],[-17,-19,-16,-14,-12,-18,36,38,-11,41,-20,-15,-13,]),'ID':([0,3,6,9,10,11,12,13,16,18,24,25,29,31,],[8,22,23,22,-7,27,-6,-5,22,22,22,22,22,22,]),'STRING':([2,],[13,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'U':([3,9,16,18,24,25,29,31,],[19,19,19,19,19,19,39,40,]),'T':([2,],[11,]),'E':([3,9,16,24,25,],[20,26,28,34,35,]),'V':([3,9,16,18,24,25,29,31,],[17,17,17,17,17,17,17,17,]),'R':([3,9,16,18,24,25,],[21,21,21,30,21,21,]),'S':([0,],[4,]),'B':([0,],[5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> B","S'",1,None,None,None),
  ('B -> VAR T ID PYC','B',4,'p_define_var','pruebas_yacc.py',159),
  ('B -> S','B',1,'p_b_s','pruebas_yacc.py',174),
  ('S -> ID ASIG E PYC','S',4,'p_asig','pruebas_yacc.py',179),
  ('S -> RETURN E PYC','S',3,'p_return','pruebas_yacc.py',216),
  ('T -> STRING','T',1,'p_tipo_str','pruebas_yacc.py',236),
  ('T -> BOOLEAN','T',1,'p_tipo_bool','pruebas_yacc.py',240),
  ('T -> INT','T',1,'p_tipo_int','pruebas_yacc.py',244),
  ('S -> PRINT LPAREN E RPAREN PYC','S',5,'p_print','pruebas_yacc.py',254),
  ('S -> PROMPT LPAREN E RPAREN PYC','S',5,'p_prompt','pruebas_yacc.py',277),
  ('S -> MMENOS ID PYC','S',3,'p_id_mm','pruebas_yacc.py',284),
  ('E -> NEG R','E',2,'p_e_notr','pruebas_yacc.py',292),
  ('E -> R','E',1,'p_e_r','pruebas_yacc.py',303),
  ('R -> U MENORQUE U','R',3,'p_erre_expression_minusthan','pruebas_yacc.py',307),
  ('R -> U','R',1,'p_erre_expression','pruebas_yacc.py',329),
  ('U -> V SUM U','U',3,'p_expression_plus','pruebas_yacc.py',333),
  ('U -> V','U',1,'p_expression_term','pruebas_yacc.py',378),
  ('V -> ENTERO','V',1,'p_term_number','pruebas_yacc.py',382),
  ('V -> ID','V',1,'p_term_id','pruebas_yacc.py',385),
  ('V -> CADENA','V',1,'p_term_string','pruebas_yacc.py',389),
  ('V -> LPAREN E RPAREN','V',3,'p_paren','pruebas_yacc.py',393),
  ('empty -> <empty>','empty',0,'p_empty','pruebas_yacc.py',402),
]
