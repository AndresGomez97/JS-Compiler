Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PUNTO
    RCORCH
    LCORCH

Grammar

Rule 0     S' -> P
Rule 1     P -> B
Rule 2     P -> F
Rule 3     F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE
Rule 4     H -> T
Rule 5     H -> empty
Rule 6     A -> T ID K
Rule 7     A -> empty
Rule 8     K -> COMA T ID K
Rule 9     K -> empty
Rule 10    W -> D W
Rule 11    W -> empty
Rule 12    D -> VAR T ID PYC
Rule 13    D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
Rule 14    D -> IF LPAREN E RPAREN LLLAVE W RLLAVE
Rule 15    D -> G
Rule 16    G -> ID ASIG E PYC
Rule 17    G -> ID LPAREN L RPAREN PYC
Rule 18    G -> PRINT LPAREN E RPAREN PYC
Rule 19    G -> PROMPT LPAREN E RPAREN PYC
Rule 20    G -> MMENOS ID PYC
Rule 21    B -> IF LPAREN E RPAREN LLLAVE C RLLAVE
Rule 22    S -> ID LPAREN L RPAREN PYC
Rule 23    L -> E Q
Rule 24    L -> empty
Rule 25    Q -> COMA E Q
Rule 26    Q -> empty
Rule 27    W -> RETURN X PYC
Rule 28    X -> empty
Rule 29    X -> E
Rule 30    B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
Rule 31    C -> B C
Rule 32    C -> empty
Rule 33    B -> VAR T ID PYC
Rule 34    B -> S
Rule 35    S -> ID ASIG E PYC
Rule 36    T -> STRING
Rule 37    T -> BOOLEAN
Rule 38    T -> INT
Rule 39    S -> PRINT LPAREN E RPAREN PYC
Rule 40    S -> PROMPT LPAREN E RPAREN PYC
Rule 41    S -> MMENOS ID PYC
Rule 42    E -> NEG R
Rule 43    E -> R
Rule 44    R -> U MENORQUE U
Rule 45    R -> U
Rule 46    U -> V SUM U
Rule 47    U -> V
Rule 48    V -> ENTERO
Rule 49    V -> ID
Rule 50    V -> CADENA
Rule 51    V -> LPAREN E RPAREN
Rule 52    V -> ID LPAREN L RPAREN
Rule 53    empty -> <empty>

Terminals, with rules where they appear

ASIG                 : 16 35
BOOLEAN              : 37
CADENA               : 50
COMA                 : 8 25
DO                   : 13 30
ENTERO               : 48
FUNCTION             : 3
ID                   : 3 6 8 12 16 17 20 22 33 35 41 49 52
IF                   : 14 21
INT                  : 38
LCORCH               : 
LLLAVE               : 3 13 14 21 30
LPAREN               : 3 13 14 17 18 19 21 22 30 39 40 51 52
MENORQUE             : 44
MMENOS               : 20 41
NEG                  : 42
PRINT                : 18 39
PROMPT               : 19 40
PUNTO                : 
PYC                  : 12 13 16 17 18 19 20 22 27 30 33 35 39 40 41
RCORCH               : 
RETURN               : 27
RLLAVE               : 3 13 14 21 30
RPAREN               : 3 13 14 17 18 19 21 22 30 39 40 51 52
STRING               : 36
SUM                  : 46
VAR                  : 12 33
WHILE                : 13 30
error                : 

Nonterminals, with rules where they appear

A                    : 3
B                    : 1 31
C                    : 21 30 31
D                    : 10
E                    : 13 14 16 18 19 21 23 25 29 30 35 39 40 51
F                    : 2
G                    : 15
H                    : 3
K                    : 6 8
L                    : 17 22 52
P                    : 0
Q                    : 23 25
R                    : 42 43
S                    : 34
T                    : 4 6 8 12 33
U                    : 44 44 45 46
V                    : 46 47
W                    : 3 10 13 14
X                    : 27
empty                : 5 7 9 11 24 26 28 32

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . B
    (2) P -> . F
    (21) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (3) F -> . FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE
    (22) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 7
    DO              shift and go to state 5
    VAR             shift and go to state 9
    FUNCTION        shift and go to state 10
    ID              shift and go to state 4
    PRINT           shift and go to state 1
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 6

    F                              shift and go to state 8
    S                              shift and go to state 11
    B                              shift and go to state 12
    P                              shift and go to state 3

state 1

    (39) S -> PRINT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 13


state 2

    (40) S -> PROMPT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 14


state 3

    (0) S' -> P .



state 4

    (22) S -> ID . LPAREN L RPAREN PYC
    (35) S -> ID . ASIG E PYC

    LPAREN          shift and go to state 16
    ASIG            shift and go to state 15


state 5

    (30) B -> DO . LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 17


state 6

    (41) S -> MMENOS . ID PYC

    ID              shift and go to state 18


state 7

    (21) B -> IF . LPAREN E RPAREN LLLAVE C RLLAVE

    LPAREN          shift and go to state 19


state 8

    (2) P -> F .

    $end            reduce using rule 2 (P -> F .)


state 9

    (33) B -> VAR . T ID PYC
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT

    STRING          shift and go to state 23
    BOOLEAN         shift and go to state 20
    INT             shift and go to state 21

    T                              shift and go to state 22

state 10

    (3) F -> FUNCTION . H ID LPAREN A RPAREN LLLAVE W RLLAVE
    (4) H -> . T
    (5) H -> . empty
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT
    (53) empty -> .

    STRING          shift and go to state 23
    BOOLEAN         shift and go to state 20
    INT             shift and go to state 21
    ID              reduce using rule 53 (empty -> .)

    empty                          shift and go to state 24
    H                              shift and go to state 25
    T                              shift and go to state 26

state 11

    (34) B -> S .

    IF              reduce using rule 34 (B -> S .)
    DO              reduce using rule 34 (B -> S .)
    VAR             reduce using rule 34 (B -> S .)
    ID              reduce using rule 34 (B -> S .)
    PRINT           reduce using rule 34 (B -> S .)
    PROMPT          reduce using rule 34 (B -> S .)
    MMENOS          reduce using rule 34 (B -> S .)
    RLLAVE          reduce using rule 34 (B -> S .)
    $end            reduce using rule 34 (B -> S .)


state 12

    (1) P -> B .

    $end            reduce using rule 1 (P -> B .)


state 13

    (39) S -> PRINT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 33
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 14

    (40) S -> PROMPT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 36
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 15

    (35) S -> ID ASIG . E PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 37
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 16

    (22) S -> ID LPAREN . L RPAREN PYC
    (23) L -> . E Q
    (24) L -> . empty
    (42) E -> . NEG R
    (43) E -> . R
    (53) empty -> .
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    RPAREN          reduce using rule 53 (empty -> .)
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    empty                          shift and go to state 38
    E                              shift and go to state 40
    L                              shift and go to state 39
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 17

    (30) B -> DO LLLAVE . C RLLAVE WHILE LPAREN E RPAREN PYC
    (31) C -> . B C
    (32) C -> . empty
    (21) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (53) empty -> .
    (22) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 7
    DO              shift and go to state 5
    VAR             shift and go to state 9
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 4
    PRINT           shift and go to state 1
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 6

    empty                          shift and go to state 41
    S                              shift and go to state 11
    C                              shift and go to state 43
    B                              shift and go to state 42

state 18

    (41) S -> MMENOS ID . PYC

    PYC             shift and go to state 44


state 19

    (21) B -> IF LPAREN . E RPAREN LLLAVE C RLLAVE
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 45
    R                              shift and go to state 28
    V                              shift and go to state 30
    U                              shift and go to state 34

state 20

    (37) T -> BOOLEAN .

    ID              reduce using rule 37 (T -> BOOLEAN .)


state 21

    (38) T -> INT .

    ID              reduce using rule 38 (T -> INT .)


state 22

    (33) B -> VAR T . ID PYC

    ID              shift and go to state 46


state 23

    (36) T -> STRING .

    ID              reduce using rule 36 (T -> STRING .)


state 24

    (5) H -> empty .

    ID              reduce using rule 5 (H -> empty .)


state 25

    (3) F -> FUNCTION H . ID LPAREN A RPAREN LLLAVE W RLLAVE

    ID              shift and go to state 47


state 26

    (4) H -> T .

    ID              reduce using rule 4 (H -> T .)


state 27

    (49) V -> ID .
    (52) V -> ID . LPAREN L RPAREN

    SUM             reduce using rule 49 (V -> ID .)
    MENORQUE        reduce using rule 49 (V -> ID .)
    RPAREN          reduce using rule 49 (V -> ID .)
    PYC             reduce using rule 49 (V -> ID .)
    COMA            reduce using rule 49 (V -> ID .)
    LPAREN          shift and go to state 48


state 28

    (43) E -> R .

    RPAREN          reduce using rule 43 (E -> R .)
    COMA            reduce using rule 43 (E -> R .)
    PYC             reduce using rule 43 (E -> R .)


state 29

    (50) V -> CADENA .

    SUM             reduce using rule 50 (V -> CADENA .)
    MENORQUE        reduce using rule 50 (V -> CADENA .)
    RPAREN          reduce using rule 50 (V -> CADENA .)
    PYC             reduce using rule 50 (V -> CADENA .)
    COMA            reduce using rule 50 (V -> CADENA .)


state 30

    (46) U -> V . SUM U
    (47) U -> V .

    SUM             shift and go to state 49
    MENORQUE        reduce using rule 47 (U -> V .)
    PYC             reduce using rule 47 (U -> V .)
    RPAREN          reduce using rule 47 (U -> V .)
    COMA            reduce using rule 47 (U -> V .)


state 31

    (48) V -> ENTERO .

    SUM             reduce using rule 48 (V -> ENTERO .)
    MENORQUE        reduce using rule 48 (V -> ENTERO .)
    RPAREN          reduce using rule 48 (V -> ENTERO .)
    PYC             reduce using rule 48 (V -> ENTERO .)
    COMA            reduce using rule 48 (V -> ENTERO .)


state 32

    (42) E -> NEG . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 50

state 33

    (39) S -> PRINT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 51


state 34

    (44) R -> U . MENORQUE U
    (45) R -> U .

    MENORQUE        shift and go to state 52
    COMA            reduce using rule 45 (R -> U .)
    RPAREN          reduce using rule 45 (R -> U .)
    PYC             reduce using rule 45 (R -> U .)


state 35

    (51) V -> LPAREN . E RPAREN
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 53
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 36

    (40) S -> PROMPT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 54


state 37

    (35) S -> ID ASIG E . PYC

    PYC             shift and go to state 55


state 38

    (24) L -> empty .

    RPAREN          reduce using rule 24 (L -> empty .)


state 39

    (22) S -> ID LPAREN L . RPAREN PYC

    RPAREN          shift and go to state 56


state 40

    (23) L -> E . Q
    (25) Q -> . COMA E Q
    (26) Q -> . empty
    (53) empty -> .

    COMA            shift and go to state 58
    RPAREN          reduce using rule 53 (empty -> .)

    empty                          shift and go to state 57
    Q                              shift and go to state 59

state 41

    (32) C -> empty .

    RLLAVE          reduce using rule 32 (C -> empty .)


state 42

    (31) C -> B . C
    (31) C -> . B C
    (32) C -> . empty
    (21) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (53) empty -> .
    (22) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 7
    DO              shift and go to state 5
    VAR             shift and go to state 9
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 4
    PRINT           shift and go to state 1
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 6

    empty                          shift and go to state 41
    S                              shift and go to state 11
    B                              shift and go to state 42
    C                              shift and go to state 60

state 43

    (30) B -> DO LLLAVE C . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 61


state 44

    (41) S -> MMENOS ID PYC .

    IF              reduce using rule 41 (S -> MMENOS ID PYC .)
    DO              reduce using rule 41 (S -> MMENOS ID PYC .)
    VAR             reduce using rule 41 (S -> MMENOS ID PYC .)
    ID              reduce using rule 41 (S -> MMENOS ID PYC .)
    PRINT           reduce using rule 41 (S -> MMENOS ID PYC .)
    PROMPT          reduce using rule 41 (S -> MMENOS ID PYC .)
    MMENOS          reduce using rule 41 (S -> MMENOS ID PYC .)
    RLLAVE          reduce using rule 41 (S -> MMENOS ID PYC .)
    $end            reduce using rule 41 (S -> MMENOS ID PYC .)


state 45

    (21) B -> IF LPAREN E . RPAREN LLLAVE C RLLAVE

    RPAREN          shift and go to state 62


state 46

    (33) B -> VAR T ID . PYC

    PYC             shift and go to state 63


state 47

    (3) F -> FUNCTION H ID . LPAREN A RPAREN LLLAVE W RLLAVE

    LPAREN          shift and go to state 64


state 48

    (52) V -> ID LPAREN . L RPAREN
    (23) L -> . E Q
    (24) L -> . empty
    (42) E -> . NEG R
    (43) E -> . R
    (53) empty -> .
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    RPAREN          reduce using rule 53 (empty -> .)
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    empty                          shift and go to state 38
    E                              shift and go to state 40
    L                              shift and go to state 65
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 49

    (46) U -> V SUM . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    V                              shift and go to state 30
    U                              shift and go to state 66

state 50

    (42) E -> NEG R .

    RPAREN          reduce using rule 42 (E -> NEG R .)
    COMA            reduce using rule 42 (E -> NEG R .)
    PYC             reduce using rule 42 (E -> NEG R .)


state 51

    (39) S -> PRINT LPAREN E RPAREN . PYC

    PYC             shift and go to state 67


state 52

    (44) R -> U MENORQUE . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    V                              shift and go to state 30
    U                              shift and go to state 68

state 53

    (51) V -> LPAREN E . RPAREN

    RPAREN          shift and go to state 69


state 54

    (40) S -> PROMPT LPAREN E RPAREN . PYC

    PYC             shift and go to state 70


state 55

    (35) S -> ID ASIG E PYC .

    IF              reduce using rule 35 (S -> ID ASIG E PYC .)
    DO              reduce using rule 35 (S -> ID ASIG E PYC .)
    VAR             reduce using rule 35 (S -> ID ASIG E PYC .)
    ID              reduce using rule 35 (S -> ID ASIG E PYC .)
    PRINT           reduce using rule 35 (S -> ID ASIG E PYC .)
    PROMPT          reduce using rule 35 (S -> ID ASIG E PYC .)
    MMENOS          reduce using rule 35 (S -> ID ASIG E PYC .)
    RLLAVE          reduce using rule 35 (S -> ID ASIG E PYC .)
    $end            reduce using rule 35 (S -> ID ASIG E PYC .)


state 56

    (22) S -> ID LPAREN L RPAREN . PYC

    PYC             shift and go to state 71


state 57

    (26) Q -> empty .

    RPAREN          reduce using rule 26 (Q -> empty .)


state 58

    (25) Q -> COMA . E Q
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 72
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 59

    (23) L -> E Q .

    RPAREN          reduce using rule 23 (L -> E Q .)


state 60

    (31) C -> B C .

    RLLAVE          reduce using rule 31 (C -> B C .)


state 61

    (30) B -> DO LLLAVE C RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 73


state 62

    (21) B -> IF LPAREN E RPAREN . LLLAVE C RLLAVE

    LLLAVE          shift and go to state 74


state 63

    (33) B -> VAR T ID PYC .

    IF              reduce using rule 33 (B -> VAR T ID PYC .)
    DO              reduce using rule 33 (B -> VAR T ID PYC .)
    VAR             reduce using rule 33 (B -> VAR T ID PYC .)
    ID              reduce using rule 33 (B -> VAR T ID PYC .)
    PRINT           reduce using rule 33 (B -> VAR T ID PYC .)
    PROMPT          reduce using rule 33 (B -> VAR T ID PYC .)
    MMENOS          reduce using rule 33 (B -> VAR T ID PYC .)
    RLLAVE          reduce using rule 33 (B -> VAR T ID PYC .)
    $end            reduce using rule 33 (B -> VAR T ID PYC .)


state 64

    (3) F -> FUNCTION H ID LPAREN . A RPAREN LLLAVE W RLLAVE
    (6) A -> . T ID K
    (7) A -> . empty
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT
    (53) empty -> .

    STRING          shift and go to state 23
    BOOLEAN         shift and go to state 20
    INT             shift and go to state 21
    RPAREN          reduce using rule 53 (empty -> .)

    empty                          shift and go to state 75
    A                              shift and go to state 77
    T                              shift and go to state 76

state 65

    (52) V -> ID LPAREN L . RPAREN

    RPAREN          shift and go to state 78


state 66

    (46) U -> V SUM U .

    MENORQUE        reduce using rule 46 (U -> V SUM U .)
    PYC             reduce using rule 46 (U -> V SUM U .)
    RPAREN          reduce using rule 46 (U -> V SUM U .)
    COMA            reduce using rule 46 (U -> V SUM U .)


state 67

    (39) S -> PRINT LPAREN E RPAREN PYC .

    IF              reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    DO              reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    ID              reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    $end            reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)


state 68

    (44) R -> U MENORQUE U .

    COMA            reduce using rule 44 (R -> U MENORQUE U .)
    RPAREN          reduce using rule 44 (R -> U MENORQUE U .)
    PYC             reduce using rule 44 (R -> U MENORQUE U .)


state 69

    (51) V -> LPAREN E RPAREN .

    SUM             reduce using rule 51 (V -> LPAREN E RPAREN .)
    MENORQUE        reduce using rule 51 (V -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 51 (V -> LPAREN E RPAREN .)
    PYC             reduce using rule 51 (V -> LPAREN E RPAREN .)
    COMA            reduce using rule 51 (V -> LPAREN E RPAREN .)


state 70

    (40) S -> PROMPT LPAREN E RPAREN PYC .

    IF              reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    DO              reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    ID              reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    $end            reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)


state 71

    (22) S -> ID LPAREN L RPAREN PYC .

    IF              reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    DO              reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    VAR             reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    ID              reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    PRINT           reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    PROMPT          reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    MMENOS          reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    RLLAVE          reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)
    $end            reduce using rule 22 (S -> ID LPAREN L RPAREN PYC .)


state 72

    (25) Q -> COMA E . Q
    (25) Q -> . COMA E Q
    (26) Q -> . empty
    (53) empty -> .

    COMA            shift and go to state 58
    RPAREN          reduce using rule 53 (empty -> .)

    empty                          shift and go to state 57
    Q                              shift and go to state 79

state 73

    (30) B -> DO LLLAVE C RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 80


state 74

    (21) B -> IF LPAREN E RPAREN LLLAVE . C RLLAVE
    (31) C -> . B C
    (32) C -> . empty
    (21) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (53) empty -> .
    (22) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 7
    DO              shift and go to state 5
    VAR             shift and go to state 9
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 4
    PRINT           shift and go to state 1
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 6

    empty                          shift and go to state 41
    S                              shift and go to state 11
    C                              shift and go to state 81
    B                              shift and go to state 42

state 75

    (7) A -> empty .

    RPAREN          reduce using rule 7 (A -> empty .)


state 76

    (6) A -> T . ID K

    ID              shift and go to state 82


state 77

    (3) F -> FUNCTION H ID LPAREN A . RPAREN LLLAVE W RLLAVE

    RPAREN          shift and go to state 83


state 78

    (52) V -> ID LPAREN L RPAREN .

    SUM             reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    MENORQUE        reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    RPAREN          reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    PYC             reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    COMA            reduce using rule 52 (V -> ID LPAREN L RPAREN .)


state 79

    (25) Q -> COMA E Q .

    RPAREN          reduce using rule 25 (Q -> COMA E Q .)


state 80

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 84
    R                              shift and go to state 28
    V                              shift and go to state 30
    U                              shift and go to state 34

state 81

    (21) B -> IF LPAREN E RPAREN LLLAVE C . RLLAVE

    RLLAVE          shift and go to state 85


state 82

    (6) A -> T ID . K
    (8) K -> . COMA T ID K
    (9) K -> . empty
    (53) empty -> .

    COMA            shift and go to state 87
    RPAREN          reduce using rule 53 (empty -> .)

    K                              shift and go to state 86
    empty                          shift and go to state 88

state 83

    (3) F -> FUNCTION H ID LPAREN A RPAREN . LLLAVE W RLLAVE

    LLLAVE          shift and go to state 89


state 84

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 90


state 85

    (21) B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .

    IF              reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    DO              reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    VAR             reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    ID              reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    PRINT           reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    PROMPT          reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    MMENOS          reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    RLLAVE          reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    $end            reduce using rule 21 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)


state 86

    (6) A -> T ID K .

    RPAREN          reduce using rule 6 (A -> T ID K .)


state 87

    (8) K -> COMA . T ID K
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT

    STRING          shift and go to state 23
    BOOLEAN         shift and go to state 20
    INT             shift and go to state 21

    T                              shift and go to state 91

state 88

    (9) K -> empty .

    RPAREN          reduce using rule 9 (K -> empty .)


state 89

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE . W RLLAVE
    (10) W -> . D W
    (11) W -> . empty
    (27) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (16) G -> . ID ASIG E PYC
    (17) G -> . ID LPAREN L RPAREN PYC
    (18) G -> . PRINT LPAREN E RPAREN PYC
    (19) G -> . PROMPT LPAREN E RPAREN PYC
    (20) G -> . MMENOS ID PYC

    RETURN          shift and go to state 98
    VAR             shift and go to state 101
    DO              shift and go to state 97
    IF              shift and go to state 100
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 96
    PRINT           shift and go to state 93
    PROMPT          shift and go to state 95
    MMENOS          shift and go to state 103

    empty                          shift and go to state 92
    G                              shift and go to state 99
    D                              shift and go to state 94
    W                              shift and go to state 102

state 90

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 104


state 91

    (8) K -> COMA T . ID K

    ID              shift and go to state 105


state 92

    (11) W -> empty .

    RLLAVE          reduce using rule 11 (W -> empty .)


state 93

    (18) G -> PRINT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 106


state 94

    (10) W -> D . W
    (10) W -> . D W
    (11) W -> . empty
    (27) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (16) G -> . ID ASIG E PYC
    (17) G -> . ID LPAREN L RPAREN PYC
    (18) G -> . PRINT LPAREN E RPAREN PYC
    (19) G -> . PROMPT LPAREN E RPAREN PYC
    (20) G -> . MMENOS ID PYC

    RETURN          shift and go to state 98
    VAR             shift and go to state 101
    DO              shift and go to state 97
    IF              shift and go to state 100
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 96
    PRINT           shift and go to state 93
    PROMPT          shift and go to state 95
    MMENOS          shift and go to state 103

    empty                          shift and go to state 92
    D                              shift and go to state 94
    G                              shift and go to state 99
    W                              shift and go to state 107

state 95

    (19) G -> PROMPT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 108


state 96

    (16) G -> ID . ASIG E PYC
    (17) G -> ID . LPAREN L RPAREN PYC

    ASIG            shift and go to state 109
    LPAREN          shift and go to state 110


state 97

    (13) D -> DO . LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 111


state 98

    (27) W -> RETURN . X PYC
    (28) X -> . empty
    (29) X -> . E
    (53) empty -> .
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    PYC             reduce using rule 53 (empty -> .)
    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    empty                          shift and go to state 112
    X                              shift and go to state 113
    E                              shift and go to state 114
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 99

    (15) D -> G .

    RETURN          reduce using rule 15 (D -> G .)
    VAR             reduce using rule 15 (D -> G .)
    DO              reduce using rule 15 (D -> G .)
    IF              reduce using rule 15 (D -> G .)
    ID              reduce using rule 15 (D -> G .)
    PRINT           reduce using rule 15 (D -> G .)
    PROMPT          reduce using rule 15 (D -> G .)
    MMENOS          reduce using rule 15 (D -> G .)
    RLLAVE          reduce using rule 15 (D -> G .)


state 100

    (14) D -> IF . LPAREN E RPAREN LLLAVE W RLLAVE

    LPAREN          shift and go to state 115


state 101

    (12) D -> VAR . T ID PYC
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT

    STRING          shift and go to state 23
    BOOLEAN         shift and go to state 20
    INT             shift and go to state 21

    T                              shift and go to state 116

state 102

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W . RLLAVE

    RLLAVE          shift and go to state 117


state 103

    (20) G -> MMENOS . ID PYC

    ID              shift and go to state 118


state 104

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .

    IF              reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    DO              reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    $end            reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)


state 105

    (8) K -> COMA T ID . K
    (8) K -> . COMA T ID K
    (9) K -> . empty
    (53) empty -> .

    COMA            shift and go to state 87
    RPAREN          reduce using rule 53 (empty -> .)

    K                              shift and go to state 119
    empty                          shift and go to state 88

state 106

    (18) G -> PRINT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 120
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 107

    (10) W -> D W .

    RLLAVE          reduce using rule 10 (W -> D W .)


state 108

    (19) G -> PROMPT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 121
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 109

    (16) G -> ID ASIG . E PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 122
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 110

    (17) G -> ID LPAREN . L RPAREN PYC
    (23) L -> . E Q
    (24) L -> . empty
    (42) E -> . NEG R
    (43) E -> . R
    (53) empty -> .
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    RPAREN          reduce using rule 53 (empty -> .)
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    empty                          shift and go to state 38
    E                              shift and go to state 40
    L                              shift and go to state 123
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 111

    (13) D -> DO LLLAVE . W RLLAVE WHILE LPAREN E RPAREN PYC
    (10) W -> . D W
    (11) W -> . empty
    (27) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (16) G -> . ID ASIG E PYC
    (17) G -> . ID LPAREN L RPAREN PYC
    (18) G -> . PRINT LPAREN E RPAREN PYC
    (19) G -> . PROMPT LPAREN E RPAREN PYC
    (20) G -> . MMENOS ID PYC

    RETURN          shift and go to state 98
    VAR             shift and go to state 101
    DO              shift and go to state 97
    IF              shift and go to state 100
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 96
    PRINT           shift and go to state 93
    PROMPT          shift and go to state 95
    MMENOS          shift and go to state 103

    empty                          shift and go to state 92
    D                              shift and go to state 94
    G                              shift and go to state 99
    W                              shift and go to state 124

state 112

    (28) X -> empty .

    PYC             reduce using rule 28 (X -> empty .)


state 113

    (27) W -> RETURN X . PYC

    PYC             shift and go to state 125


state 114

    (29) X -> E .

    PYC             reduce using rule 29 (X -> E .)


state 115

    (14) D -> IF LPAREN . E RPAREN LLLAVE W RLLAVE
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 126
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 116

    (12) D -> VAR T . ID PYC

    ID              shift and go to state 127


state 117

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE .

    $end            reduce using rule 3 (F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE .)


state 118

    (20) G -> MMENOS ID . PYC

    PYC             shift and go to state 128


state 119

    (8) K -> COMA T ID K .

    RPAREN          reduce using rule 8 (K -> COMA T ID K .)


state 120

    (18) G -> PRINT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 129


state 121

    (19) G -> PROMPT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 130


state 122

    (16) G -> ID ASIG E . PYC

    PYC             shift and go to state 131


state 123

    (17) G -> ID LPAREN L . RPAREN PYC

    RPAREN          shift and go to state 132


state 124

    (13) D -> DO LLLAVE W . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 133


state 125

    (27) W -> RETURN X PYC .

    RLLAVE          reduce using rule 27 (W -> RETURN X PYC .)


state 126

    (14) D -> IF LPAREN E . RPAREN LLLAVE W RLLAVE

    RPAREN          shift and go to state 134


state 127

    (12) D -> VAR T ID . PYC

    PYC             shift and go to state 135


state 128

    (20) G -> MMENOS ID PYC .

    RETURN          reduce using rule 20 (G -> MMENOS ID PYC .)
    VAR             reduce using rule 20 (G -> MMENOS ID PYC .)
    DO              reduce using rule 20 (G -> MMENOS ID PYC .)
    IF              reduce using rule 20 (G -> MMENOS ID PYC .)
    ID              reduce using rule 20 (G -> MMENOS ID PYC .)
    PRINT           reduce using rule 20 (G -> MMENOS ID PYC .)
    PROMPT          reduce using rule 20 (G -> MMENOS ID PYC .)
    MMENOS          reduce using rule 20 (G -> MMENOS ID PYC .)
    RLLAVE          reduce using rule 20 (G -> MMENOS ID PYC .)


state 129

    (18) G -> PRINT LPAREN E RPAREN . PYC

    PYC             shift and go to state 136


state 130

    (19) G -> PROMPT LPAREN E RPAREN . PYC

    PYC             shift and go to state 137


state 131

    (16) G -> ID ASIG E PYC .

    RETURN          reduce using rule 16 (G -> ID ASIG E PYC .)
    VAR             reduce using rule 16 (G -> ID ASIG E PYC .)
    DO              reduce using rule 16 (G -> ID ASIG E PYC .)
    IF              reduce using rule 16 (G -> ID ASIG E PYC .)
    ID              reduce using rule 16 (G -> ID ASIG E PYC .)
    PRINT           reduce using rule 16 (G -> ID ASIG E PYC .)
    PROMPT          reduce using rule 16 (G -> ID ASIG E PYC .)
    MMENOS          reduce using rule 16 (G -> ID ASIG E PYC .)
    RLLAVE          reduce using rule 16 (G -> ID ASIG E PYC .)


state 132

    (17) G -> ID LPAREN L RPAREN . PYC

    PYC             shift and go to state 138


state 133

    (13) D -> DO LLLAVE W RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 139


state 134

    (14) D -> IF LPAREN E RPAREN . LLLAVE W RLLAVE

    LLLAVE          shift and go to state 140


state 135

    (12) D -> VAR T ID PYC .

    RETURN          reduce using rule 12 (D -> VAR T ID PYC .)
    VAR             reduce using rule 12 (D -> VAR T ID PYC .)
    DO              reduce using rule 12 (D -> VAR T ID PYC .)
    IF              reduce using rule 12 (D -> VAR T ID PYC .)
    ID              reduce using rule 12 (D -> VAR T ID PYC .)
    PRINT           reduce using rule 12 (D -> VAR T ID PYC .)
    PROMPT          reduce using rule 12 (D -> VAR T ID PYC .)
    MMENOS          reduce using rule 12 (D -> VAR T ID PYC .)
    RLLAVE          reduce using rule 12 (D -> VAR T ID PYC .)


state 136

    (18) G -> PRINT LPAREN E RPAREN PYC .

    RETURN          reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    DO              reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    IF              reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    ID              reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 18 (G -> PRINT LPAREN E RPAREN PYC .)


state 137

    (19) G -> PROMPT LPAREN E RPAREN PYC .

    RETURN          reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    DO              reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    IF              reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    ID              reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 19 (G -> PROMPT LPAREN E RPAREN PYC .)


state 138

    (17) G -> ID LPAREN L RPAREN PYC .

    RETURN          reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    VAR             reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    DO              reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    IF              reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    ID              reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    PRINT           reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    PROMPT          reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    MMENOS          reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)
    RLLAVE          reduce using rule 17 (G -> ID LPAREN L RPAREN PYC .)


state 139

    (13) D -> DO LLLAVE W RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 141


state 140

    (14) D -> IF LPAREN E RPAREN LLLAVE . W RLLAVE
    (10) W -> . D W
    (11) W -> . empty
    (27) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (16) G -> . ID ASIG E PYC
    (17) G -> . ID LPAREN L RPAREN PYC
    (18) G -> . PRINT LPAREN E RPAREN PYC
    (19) G -> . PROMPT LPAREN E RPAREN PYC
    (20) G -> . MMENOS ID PYC

    RETURN          shift and go to state 98
    VAR             shift and go to state 101
    DO              shift and go to state 97
    IF              shift and go to state 100
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 96
    PRINT           shift and go to state 93
    PROMPT          shift and go to state 95
    MMENOS          shift and go to state 103

    empty                          shift and go to state 92
    D                              shift and go to state 94
    G                              shift and go to state 99
    W                              shift and go to state 142

state 141

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 32
    ENTERO          shift and go to state 31
    ID              shift and go to state 27
    CADENA          shift and go to state 29
    LPAREN          shift and go to state 35

    E                              shift and go to state 143
    V                              shift and go to state 30
    U                              shift and go to state 34
    R                              shift and go to state 28

state 142

    (14) D -> IF LPAREN E RPAREN LLLAVE W . RLLAVE

    RLLAVE          shift and go to state 144


state 143

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 145


state 144

    (14) D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .

    RETURN          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    VAR             reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    DO              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    IF              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    ID              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    PRINT           reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    PROMPT          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    MMENOS          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    RLLAVE          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)


state 145

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 146


state 146

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .

    RETURN          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    DO              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    IF              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)

