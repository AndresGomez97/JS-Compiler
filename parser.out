Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    PUNTO
    FUNCTION
    LCORCH
    COMA
    RCORCH
    IF

Grammar

Rule 0     S' -> B
Rule 1     B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
Rule 2     C -> B C
Rule 3     C -> empty
Rule 4     B -> VAR T ID PYC
Rule 5     B -> S
Rule 6     S -> ID ASIG E PYC
Rule 7     S -> RETURN E PYC
Rule 8     T -> STRING
Rule 9     T -> BOOLEAN
Rule 10    T -> INT
Rule 11    S -> PRINT LPAREN E RPAREN PYC
Rule 12    S -> PROMPT LPAREN E RPAREN PYC
Rule 13    S -> MMENOS ID PYC
Rule 14    E -> NEG R
Rule 15    E -> R
Rule 16    R -> U MENORQUE U
Rule 17    R -> U
Rule 18    U -> V SUM U
Rule 19    U -> V
Rule 20    V -> ENTERO
Rule 21    V -> ID
Rule 22    V -> CADENA
Rule 23    V -> LPAREN E RPAREN
Rule 24    empty -> <empty>

Terminals, with rules where they appear

ASIG                 : 6
BOOLEAN              : 9
CADENA               : 22
COMA                 : 
DO                   : 1
ENTERO               : 20
FUNCTION             : 
ID                   : 4 6 13 21
IF                   : 
INT                  : 10
LCORCH               : 
LLLAVE               : 1
LPAREN               : 1 11 12 23
MENORQUE             : 16
MMENOS               : 13
NEG                  : 14
PRINT                : 11
PROMPT               : 12
PUNTO                : 
PYC                  : 1 4 6 7 11 12 13
RCORCH               : 
RETURN               : 7
RLLAVE               : 1
RPAREN               : 1 11 12 23
STRING               : 8
SUM                  : 18
VAR                  : 4
WHILE                : 1
error                : 

Nonterminals, with rules where they appear

B                    : 2 0
C                    : 1 2
E                    : 1 6 7 11 12 23
R                    : 14 15
S                    : 5
T                    : 4
U                    : 16 16 17 18
V                    : 18 19
empty                : 3

Parsing method: LALR

state 0

    (0) S' -> . B
    (1) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (4) B -> . VAR T ID PYC
    (5) B -> . S
    (6) S -> . ID ASIG E PYC
    (7) S -> . RETURN E PYC
    (11) S -> . PRINT LPAREN E RPAREN PYC
    (12) S -> . PROMPT LPAREN E RPAREN PYC
    (13) S -> . MMENOS ID PYC

    DO              shift and go to state 7
    VAR             shift and go to state 4
    ID              shift and go to state 9
    RETURN          shift and go to state 8
    PRINT           shift and go to state 1
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    S                              shift and go to state 6
    B                              shift and go to state 3

state 1

    (11) S -> PRINT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 10


state 2

    (12) S -> PROMPT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 11


state 3

    (0) S' -> B .



state 4

    (4) B -> VAR . T ID PYC
    (8) T -> . STRING
    (9) T -> . BOOLEAN
    (10) T -> . INT

    STRING          shift and go to state 12
    BOOLEAN         shift and go to state 14
    INT             shift and go to state 13

    T                              shift and go to state 15

state 5

    (13) S -> MMENOS . ID PYC

    ID              shift and go to state 16


state 6

    (5) B -> S .

    DO              reduce using rule 5 (B -> S .)
    VAR             reduce using rule 5 (B -> S .)
    ID              reduce using rule 5 (B -> S .)
    RETURN          reduce using rule 5 (B -> S .)
    PRINT           reduce using rule 5 (B -> S .)
    PROMPT          reduce using rule 5 (B -> S .)
    MMENOS          reduce using rule 5 (B -> S .)
    RLLAVE          reduce using rule 5 (B -> S .)
    $end            reduce using rule 5 (B -> S .)


state 7

    (1) B -> DO . LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 17


state 8

    (7) S -> RETURN . E PYC
    (14) E -> . NEG R
    (15) E -> . R
    (16) R -> . U MENORQUE U
    (17) R -> . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    NEG             shift and go to state 20
    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 23
    V                              shift and go to state 24
    E                              shift and go to state 25
    R                              shift and go to state 21

state 9

    (6) S -> ID . ASIG E PYC

    ASIG            shift and go to state 27


state 10

    (11) S -> PRINT LPAREN . E RPAREN PYC
    (14) E -> . NEG R
    (15) E -> . R
    (16) R -> . U MENORQUE U
    (17) R -> . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    NEG             shift and go to state 20
    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 23
    V                              shift and go to state 24
    E                              shift and go to state 28
    R                              shift and go to state 21

state 11

    (12) S -> PROMPT LPAREN . E RPAREN PYC
    (14) E -> . NEG R
    (15) E -> . R
    (16) R -> . U MENORQUE U
    (17) R -> . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    NEG             shift and go to state 20
    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 23
    V                              shift and go to state 24
    E                              shift and go to state 29
    R                              shift and go to state 21

state 12

    (8) T -> STRING .

    ID              reduce using rule 8 (T -> STRING .)


state 13

    (10) T -> INT .

    ID              reduce using rule 10 (T -> INT .)


state 14

    (9) T -> BOOLEAN .

    ID              reduce using rule 9 (T -> BOOLEAN .)


state 15

    (4) B -> VAR T . ID PYC

    ID              shift and go to state 30


state 16

    (13) S -> MMENOS ID . PYC

    PYC             shift and go to state 31


state 17

    (1) B -> DO LLLAVE . C RLLAVE WHILE LPAREN E RPAREN PYC
    (2) C -> . B C
    (3) C -> . empty
    (1) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (4) B -> . VAR T ID PYC
    (5) B -> . S
    (24) empty -> .
    (6) S -> . ID ASIG E PYC
    (7) S -> . RETURN E PYC
    (11) S -> . PRINT LPAREN E RPAREN PYC
    (12) S -> . PROMPT LPAREN E RPAREN PYC
    (13) S -> . MMENOS ID PYC

    DO              shift and go to state 7
    VAR             shift and go to state 4
    RLLAVE          reduce using rule 24 (empty -> .)
    ID              shift and go to state 9
    RETURN          shift and go to state 8
    PRINT           shift and go to state 1
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    C                              shift and go to state 34
    empty                          shift and go to state 32
    S                              shift and go to state 6
    B                              shift and go to state 33

state 18

    (23) V -> LPAREN . E RPAREN
    (14) E -> . NEG R
    (15) E -> . R
    (16) R -> . U MENORQUE U
    (17) R -> . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    NEG             shift and go to state 20
    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 23
    V                              shift and go to state 24
    E                              shift and go to state 35
    R                              shift and go to state 21

state 19

    (22) V -> CADENA .

    SUM             reduce using rule 22 (V -> CADENA .)
    MENORQUE        reduce using rule 22 (V -> CADENA .)
    PYC             reduce using rule 22 (V -> CADENA .)
    RPAREN          reduce using rule 22 (V -> CADENA .)


state 20

    (14) E -> NEG . R
    (16) R -> . U MENORQUE U
    (17) R -> . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 23
    V                              shift and go to state 24
    R                              shift and go to state 36

state 21

    (15) E -> R .

    PYC             reduce using rule 15 (E -> R .)
    RPAREN          reduce using rule 15 (E -> R .)


state 22

    (21) V -> ID .

    SUM             reduce using rule 21 (V -> ID .)
    MENORQUE        reduce using rule 21 (V -> ID .)
    PYC             reduce using rule 21 (V -> ID .)
    RPAREN          reduce using rule 21 (V -> ID .)


state 23

    (16) R -> U . MENORQUE U
    (17) R -> U .

    MENORQUE        shift and go to state 37
    PYC             reduce using rule 17 (R -> U .)
    RPAREN          reduce using rule 17 (R -> U .)


state 24

    (18) U -> V . SUM U
    (19) U -> V .

    SUM             shift and go to state 38
    MENORQUE        reduce using rule 19 (U -> V .)
    PYC             reduce using rule 19 (U -> V .)
    RPAREN          reduce using rule 19 (U -> V .)


state 25

    (7) S -> RETURN E . PYC

    PYC             shift and go to state 39


state 26

    (20) V -> ENTERO .

    SUM             reduce using rule 20 (V -> ENTERO .)
    MENORQUE        reduce using rule 20 (V -> ENTERO .)
    PYC             reduce using rule 20 (V -> ENTERO .)
    RPAREN          reduce using rule 20 (V -> ENTERO .)


state 27

    (6) S -> ID ASIG . E PYC
    (14) E -> . NEG R
    (15) E -> . R
    (16) R -> . U MENORQUE U
    (17) R -> . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    NEG             shift and go to state 20
    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 23
    V                              shift and go to state 24
    E                              shift and go to state 40
    R                              shift and go to state 21

state 28

    (11) S -> PRINT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 41


state 29

    (12) S -> PROMPT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 42


state 30

    (4) B -> VAR T ID . PYC

    PYC             shift and go to state 43


state 31

    (13) S -> MMENOS ID PYC .

    DO              reduce using rule 13 (S -> MMENOS ID PYC .)
    VAR             reduce using rule 13 (S -> MMENOS ID PYC .)
    ID              reduce using rule 13 (S -> MMENOS ID PYC .)
    RETURN          reduce using rule 13 (S -> MMENOS ID PYC .)
    PRINT           reduce using rule 13 (S -> MMENOS ID PYC .)
    PROMPT          reduce using rule 13 (S -> MMENOS ID PYC .)
    MMENOS          reduce using rule 13 (S -> MMENOS ID PYC .)
    RLLAVE          reduce using rule 13 (S -> MMENOS ID PYC .)
    $end            reduce using rule 13 (S -> MMENOS ID PYC .)


state 32

    (3) C -> empty .

    RLLAVE          reduce using rule 3 (C -> empty .)


state 33

    (2) C -> B . C
    (2) C -> . B C
    (3) C -> . empty
    (1) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (4) B -> . VAR T ID PYC
    (5) B -> . S
    (24) empty -> .
    (6) S -> . ID ASIG E PYC
    (7) S -> . RETURN E PYC
    (11) S -> . PRINT LPAREN E RPAREN PYC
    (12) S -> . PROMPT LPAREN E RPAREN PYC
    (13) S -> . MMENOS ID PYC

    DO              shift and go to state 7
    VAR             shift and go to state 4
    RLLAVE          reduce using rule 24 (empty -> .)
    ID              shift and go to state 9
    RETURN          shift and go to state 8
    PRINT           shift and go to state 1
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    C                              shift and go to state 44
    empty                          shift and go to state 32
    B                              shift and go to state 33
    S                              shift and go to state 6

state 34

    (1) B -> DO LLLAVE C . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 45


state 35

    (23) V -> LPAREN E . RPAREN

    RPAREN          shift and go to state 46


state 36

    (14) E -> NEG R .

    PYC             reduce using rule 14 (E -> NEG R .)
    RPAREN          reduce using rule 14 (E -> NEG R .)


state 37

    (16) R -> U MENORQUE . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 47
    V                              shift and go to state 24

state 38

    (18) U -> V SUM . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 48
    V                              shift and go to state 24

state 39

    (7) S -> RETURN E PYC .

    DO              reduce using rule 7 (S -> RETURN E PYC .)
    VAR             reduce using rule 7 (S -> RETURN E PYC .)
    ID              reduce using rule 7 (S -> RETURN E PYC .)
    RETURN          reduce using rule 7 (S -> RETURN E PYC .)
    PRINT           reduce using rule 7 (S -> RETURN E PYC .)
    PROMPT          reduce using rule 7 (S -> RETURN E PYC .)
    MMENOS          reduce using rule 7 (S -> RETURN E PYC .)
    RLLAVE          reduce using rule 7 (S -> RETURN E PYC .)
    $end            reduce using rule 7 (S -> RETURN E PYC .)


state 40

    (6) S -> ID ASIG E . PYC

    PYC             shift and go to state 49


state 41

    (11) S -> PRINT LPAREN E RPAREN . PYC

    PYC             shift and go to state 50


state 42

    (12) S -> PROMPT LPAREN E RPAREN . PYC

    PYC             shift and go to state 51


state 43

    (4) B -> VAR T ID PYC .

    DO              reduce using rule 4 (B -> VAR T ID PYC .)
    VAR             reduce using rule 4 (B -> VAR T ID PYC .)
    ID              reduce using rule 4 (B -> VAR T ID PYC .)
    RETURN          reduce using rule 4 (B -> VAR T ID PYC .)
    PRINT           reduce using rule 4 (B -> VAR T ID PYC .)
    PROMPT          reduce using rule 4 (B -> VAR T ID PYC .)
    MMENOS          reduce using rule 4 (B -> VAR T ID PYC .)
    RLLAVE          reduce using rule 4 (B -> VAR T ID PYC .)
    $end            reduce using rule 4 (B -> VAR T ID PYC .)


state 44

    (2) C -> B C .

    RLLAVE          reduce using rule 2 (C -> B C .)


state 45

    (1) B -> DO LLLAVE C RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 52


state 46

    (23) V -> LPAREN E RPAREN .

    SUM             reduce using rule 23 (V -> LPAREN E RPAREN .)
    MENORQUE        reduce using rule 23 (V -> LPAREN E RPAREN .)
    PYC             reduce using rule 23 (V -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 23 (V -> LPAREN E RPAREN .)


state 47

    (16) R -> U MENORQUE U .

    PYC             reduce using rule 16 (R -> U MENORQUE U .)
    RPAREN          reduce using rule 16 (R -> U MENORQUE U .)


state 48

    (18) U -> V SUM U .

    MENORQUE        reduce using rule 18 (U -> V SUM U .)
    PYC             reduce using rule 18 (U -> V SUM U .)
    RPAREN          reduce using rule 18 (U -> V SUM U .)


state 49

    (6) S -> ID ASIG E PYC .

    DO              reduce using rule 6 (S -> ID ASIG E PYC .)
    VAR             reduce using rule 6 (S -> ID ASIG E PYC .)
    ID              reduce using rule 6 (S -> ID ASIG E PYC .)
    RETURN          reduce using rule 6 (S -> ID ASIG E PYC .)
    PRINT           reduce using rule 6 (S -> ID ASIG E PYC .)
    PROMPT          reduce using rule 6 (S -> ID ASIG E PYC .)
    MMENOS          reduce using rule 6 (S -> ID ASIG E PYC .)
    RLLAVE          reduce using rule 6 (S -> ID ASIG E PYC .)
    $end            reduce using rule 6 (S -> ID ASIG E PYC .)


state 50

    (11) S -> PRINT LPAREN E RPAREN PYC .

    DO              reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    ID              reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    RETURN          reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)
    $end            reduce using rule 11 (S -> PRINT LPAREN E RPAREN PYC .)


state 51

    (12) S -> PROMPT LPAREN E RPAREN PYC .

    DO              reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    ID              reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    RETURN          reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)
    $end            reduce using rule 12 (S -> PROMPT LPAREN E RPAREN PYC .)


state 52

    (1) B -> DO LLLAVE C RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 53


state 53

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN . E RPAREN PYC
    (14) E -> . NEG R
    (15) E -> . R
    (16) R -> . U MENORQUE U
    (17) R -> . U
    (18) U -> . V SUM U
    (19) U -> . V
    (20) V -> . ENTERO
    (21) V -> . ID
    (22) V -> . CADENA
    (23) V -> . LPAREN E RPAREN

    NEG             shift and go to state 20
    ENTERO          shift and go to state 26
    ID              shift and go to state 22
    CADENA          shift and go to state 19
    LPAREN          shift and go to state 18

    U                              shift and go to state 23
    V                              shift and go to state 24
    E                              shift and go to state 54
    R                              shift and go to state 21

state 54

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 55


state 55

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 56


state 56

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .

    DO              reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    RETURN          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    $end            reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)

