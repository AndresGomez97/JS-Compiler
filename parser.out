Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    RCORCH
    LCORCH
    IF
    FUNCTION
    COMA
    PUNTO

Grammar

Rule 0     S' -> B
Rule 1     B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
Rule 2     C -> B C
Rule 3     C -> empty
Rule 4     B -> VAR T ID PYC
Rule 5     B -> S
Rule 6     S -> ID ASIG E PYC
Rule 7     S -> RETURN E PYC
Rule 8     S -> RETURN empty PYC
Rule 9     T -> STRING
Rule 10    T -> BOOLEAN
Rule 11    T -> INT
Rule 12    S -> PRINT LPAREN E RPAREN PYC
Rule 13    S -> PROMPT LPAREN E RPAREN PYC
Rule 14    S -> MMENOS ID PYC
Rule 15    E -> NEG R
Rule 16    E -> R
Rule 17    R -> U MENORQUE U
Rule 18    R -> U
Rule 19    U -> V SUM U
Rule 20    U -> V
Rule 21    V -> ENTERO
Rule 22    V -> ID
Rule 23    V -> CADENA
Rule 24    V -> LPAREN E RPAREN
Rule 25    empty -> <empty>

Terminals, with rules where they appear

ASIG                 : 6
BOOLEAN              : 10
CADENA               : 23
COMA                 : 
DO                   : 1
ENTERO               : 21
FUNCTION             : 
ID                   : 4 6 14 22
IF                   : 
INT                  : 11
LCORCH               : 
LLLAVE               : 1
LPAREN               : 1 12 13 24
MENORQUE             : 17
MMENOS               : 14
NEG                  : 15
PRINT                : 12
PROMPT               : 13
PUNTO                : 
PYC                  : 1 4 6 7 8 12 13 14
RCORCH               : 
RETURN               : 7 8
RLLAVE               : 1
RPAREN               : 1 12 13 24
STRING               : 9
SUM                  : 19
VAR                  : 4
WHILE                : 1
error                : 

Nonterminals, with rules where they appear

B                    : 2 0
C                    : 1 2
E                    : 1 6 7 12 13 24
R                    : 15 16
S                    : 5
T                    : 4
U                    : 17 17 18 19
V                    : 19 20
empty                : 3 8

Parsing method: LALR

state 0

    (0) S' -> . B
    (1) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (4) B -> . VAR T ID PYC
    (5) B -> . S
    (6) S -> . ID ASIG E PYC
    (7) S -> . RETURN E PYC
    (8) S -> . RETURN empty PYC
    (12) S -> . PRINT LPAREN E RPAREN PYC
    (13) S -> . PROMPT LPAREN E RPAREN PYC
    (14) S -> . MMENOS ID PYC

    DO              shift and go to state 3
    VAR             shift and go to state 6
    ID              shift and go to state 4
    RETURN          shift and go to state 5
    PRINT           shift and go to state 8
    PROMPT          shift and go to state 1
    MMENOS          shift and go to state 9

    S                              shift and go to state 2
    B                              shift and go to state 7

state 1

    (13) S -> PROMPT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 10


state 2

    (5) B -> S .

    DO              reduce using rule 5 (B -> S .)
    VAR             reduce using rule 5 (B -> S .)
    ID              reduce using rule 5 (B -> S .)
    RETURN          reduce using rule 5 (B -> S .)
    PRINT           reduce using rule 5 (B -> S .)
    PROMPT          reduce using rule 5 (B -> S .)
    MMENOS          reduce using rule 5 (B -> S .)
    RLLAVE          reduce using rule 5 (B -> S .)
    $end            reduce using rule 5 (B -> S .)


state 3

    (1) B -> DO . LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 11


state 4

    (6) S -> ID . ASIG E PYC

    ASIG            shift and go to state 12


state 5

    (7) S -> RETURN . E PYC
    (8) S -> RETURN . empty PYC
    (15) E -> . NEG R
    (16) E -> . R
    (25) empty -> .
    (17) R -> . U MENORQUE U
    (18) R -> . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    NEG             shift and go to state 19
    PYC             reduce using rule 25 (empty -> .)
    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 22
    R                              shift and go to state 17
    E                              shift and go to state 13
    empty                          shift and go to state 14

state 6

    (4) B -> VAR . T ID PYC
    (9) T -> . STRING
    (10) T -> . BOOLEAN
    (11) T -> . INT

    STRING          shift and go to state 23
    BOOLEAN         shift and go to state 26
    INT             shift and go to state 25

    T                              shift and go to state 24

state 7

    (0) S' -> B .



state 8

    (12) S -> PRINT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 27


state 9

    (14) S -> MMENOS . ID PYC

    ID              shift and go to state 28


state 10

    (13) S -> PROMPT LPAREN . E RPAREN PYC
    (15) E -> . NEG R
    (16) E -> . R
    (17) R -> . U MENORQUE U
    (18) R -> . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    NEG             shift and go to state 19
    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 22
    R                              shift and go to state 17
    E                              shift and go to state 29

state 11

    (1) B -> DO LLLAVE . C RLLAVE WHILE LPAREN E RPAREN PYC
    (2) C -> . B C
    (3) C -> . empty
    (1) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (4) B -> . VAR T ID PYC
    (5) B -> . S
    (25) empty -> .
    (6) S -> . ID ASIG E PYC
    (7) S -> . RETURN E PYC
    (8) S -> . RETURN empty PYC
    (12) S -> . PRINT LPAREN E RPAREN PYC
    (13) S -> . PROMPT LPAREN E RPAREN PYC
    (14) S -> . MMENOS ID PYC

    DO              shift and go to state 3
    VAR             shift and go to state 6
    RLLAVE          reduce using rule 25 (empty -> .)
    ID              shift and go to state 4
    RETURN          shift and go to state 5
    PRINT           shift and go to state 8
    PROMPT          shift and go to state 1
    MMENOS          shift and go to state 9

    S                              shift and go to state 2
    B                              shift and go to state 31
    empty                          shift and go to state 30
    C                              shift and go to state 32

state 12

    (6) S -> ID ASIG . E PYC
    (15) E -> . NEG R
    (16) E -> . R
    (17) R -> . U MENORQUE U
    (18) R -> . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    NEG             shift and go to state 19
    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 22
    R                              shift and go to state 17
    E                              shift and go to state 33

state 13

    (7) S -> RETURN E . PYC

    PYC             shift and go to state 34


state 14

    (8) S -> RETURN empty . PYC

    PYC             shift and go to state 35


state 15

    (21) V -> ENTERO .

    SUM             reduce using rule 21 (V -> ENTERO .)
    MENORQUE        reduce using rule 21 (V -> ENTERO .)
    RPAREN          reduce using rule 21 (V -> ENTERO .)
    PYC             reduce using rule 21 (V -> ENTERO .)


state 16

    (23) V -> CADENA .

    SUM             reduce using rule 23 (V -> CADENA .)
    MENORQUE        reduce using rule 23 (V -> CADENA .)
    RPAREN          reduce using rule 23 (V -> CADENA .)
    PYC             reduce using rule 23 (V -> CADENA .)


state 17

    (16) E -> R .

    RPAREN          reduce using rule 16 (E -> R .)
    PYC             reduce using rule 16 (E -> R .)


state 18

    (19) U -> V . SUM U
    (20) U -> V .

    SUM             shift and go to state 36
    MENORQUE        reduce using rule 20 (U -> V .)
    PYC             reduce using rule 20 (U -> V .)
    RPAREN          reduce using rule 20 (U -> V .)


state 19

    (15) E -> NEG . R
    (17) R -> . U MENORQUE U
    (18) R -> . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 22
    R                              shift and go to state 37

state 20

    (24) V -> LPAREN . E RPAREN
    (15) E -> . NEG R
    (16) E -> . R
    (17) R -> . U MENORQUE U
    (18) R -> . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    NEG             shift and go to state 19
    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 22
    R                              shift and go to state 17
    E                              shift and go to state 38

state 21

    (22) V -> ID .

    SUM             reduce using rule 22 (V -> ID .)
    MENORQUE        reduce using rule 22 (V -> ID .)
    RPAREN          reduce using rule 22 (V -> ID .)
    PYC             reduce using rule 22 (V -> ID .)


state 22

    (17) R -> U . MENORQUE U
    (18) R -> U .

    MENORQUE        shift and go to state 39
    PYC             reduce using rule 18 (R -> U .)
    RPAREN          reduce using rule 18 (R -> U .)


state 23

    (9) T -> STRING .

    ID              reduce using rule 9 (T -> STRING .)


state 24

    (4) B -> VAR T . ID PYC

    ID              shift and go to state 40


state 25

    (11) T -> INT .

    ID              reduce using rule 11 (T -> INT .)


state 26

    (10) T -> BOOLEAN .

    ID              reduce using rule 10 (T -> BOOLEAN .)


state 27

    (12) S -> PRINT LPAREN . E RPAREN PYC
    (15) E -> . NEG R
    (16) E -> . R
    (17) R -> . U MENORQUE U
    (18) R -> . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    NEG             shift and go to state 19
    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 22
    R                              shift and go to state 17
    E                              shift and go to state 41

state 28

    (14) S -> MMENOS ID . PYC

    PYC             shift and go to state 42


state 29

    (13) S -> PROMPT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 43


state 30

    (3) C -> empty .

    RLLAVE          reduce using rule 3 (C -> empty .)


state 31

    (2) C -> B . C
    (2) C -> . B C
    (3) C -> . empty
    (1) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (4) B -> . VAR T ID PYC
    (5) B -> . S
    (25) empty -> .
    (6) S -> . ID ASIG E PYC
    (7) S -> . RETURN E PYC
    (8) S -> . RETURN empty PYC
    (12) S -> . PRINT LPAREN E RPAREN PYC
    (13) S -> . PROMPT LPAREN E RPAREN PYC
    (14) S -> . MMENOS ID PYC

    DO              shift and go to state 3
    VAR             shift and go to state 6
    RLLAVE          reduce using rule 25 (empty -> .)
    ID              shift and go to state 4
    RETURN          shift and go to state 5
    PRINT           shift and go to state 8
    PROMPT          shift and go to state 1
    MMENOS          shift and go to state 9

    S                              shift and go to state 2
    B                              shift and go to state 31
    empty                          shift and go to state 30
    C                              shift and go to state 44

state 32

    (1) B -> DO LLLAVE C . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 45


state 33

    (6) S -> ID ASIG E . PYC

    PYC             shift and go to state 46


state 34

    (7) S -> RETURN E PYC .

    DO              reduce using rule 7 (S -> RETURN E PYC .)
    VAR             reduce using rule 7 (S -> RETURN E PYC .)
    ID              reduce using rule 7 (S -> RETURN E PYC .)
    RETURN          reduce using rule 7 (S -> RETURN E PYC .)
    PRINT           reduce using rule 7 (S -> RETURN E PYC .)
    PROMPT          reduce using rule 7 (S -> RETURN E PYC .)
    MMENOS          reduce using rule 7 (S -> RETURN E PYC .)
    RLLAVE          reduce using rule 7 (S -> RETURN E PYC .)
    $end            reduce using rule 7 (S -> RETURN E PYC .)


state 35

    (8) S -> RETURN empty PYC .

    DO              reduce using rule 8 (S -> RETURN empty PYC .)
    VAR             reduce using rule 8 (S -> RETURN empty PYC .)
    ID              reduce using rule 8 (S -> RETURN empty PYC .)
    RETURN          reduce using rule 8 (S -> RETURN empty PYC .)
    PRINT           reduce using rule 8 (S -> RETURN empty PYC .)
    PROMPT          reduce using rule 8 (S -> RETURN empty PYC .)
    MMENOS          reduce using rule 8 (S -> RETURN empty PYC .)
    RLLAVE          reduce using rule 8 (S -> RETURN empty PYC .)
    $end            reduce using rule 8 (S -> RETURN empty PYC .)


state 36

    (19) U -> V SUM . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    U                              shift and go to state 47
    V                              shift and go to state 18

state 37

    (15) E -> NEG R .

    RPAREN          reduce using rule 15 (E -> NEG R .)
    PYC             reduce using rule 15 (E -> NEG R .)


state 38

    (24) V -> LPAREN E . RPAREN

    RPAREN          shift and go to state 48


state 39

    (17) R -> U MENORQUE . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 49

state 40

    (4) B -> VAR T ID . PYC

    PYC             shift and go to state 50


state 41

    (12) S -> PRINT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 51


state 42

    (14) S -> MMENOS ID PYC .

    DO              reduce using rule 14 (S -> MMENOS ID PYC .)
    VAR             reduce using rule 14 (S -> MMENOS ID PYC .)
    ID              reduce using rule 14 (S -> MMENOS ID PYC .)
    RETURN          reduce using rule 14 (S -> MMENOS ID PYC .)
    PRINT           reduce using rule 14 (S -> MMENOS ID PYC .)
    PROMPT          reduce using rule 14 (S -> MMENOS ID PYC .)
    MMENOS          reduce using rule 14 (S -> MMENOS ID PYC .)
    RLLAVE          reduce using rule 14 (S -> MMENOS ID PYC .)
    $end            reduce using rule 14 (S -> MMENOS ID PYC .)


state 43

    (13) S -> PROMPT LPAREN E RPAREN . PYC

    PYC             shift and go to state 52


state 44

    (2) C -> B C .

    RLLAVE          reduce using rule 2 (C -> B C .)


state 45

    (1) B -> DO LLLAVE C RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 53


state 46

    (6) S -> ID ASIG E PYC .

    DO              reduce using rule 6 (S -> ID ASIG E PYC .)
    VAR             reduce using rule 6 (S -> ID ASIG E PYC .)
    ID              reduce using rule 6 (S -> ID ASIG E PYC .)
    RETURN          reduce using rule 6 (S -> ID ASIG E PYC .)
    PRINT           reduce using rule 6 (S -> ID ASIG E PYC .)
    PROMPT          reduce using rule 6 (S -> ID ASIG E PYC .)
    MMENOS          reduce using rule 6 (S -> ID ASIG E PYC .)
    RLLAVE          reduce using rule 6 (S -> ID ASIG E PYC .)
    $end            reduce using rule 6 (S -> ID ASIG E PYC .)


state 47

    (19) U -> V SUM U .

    MENORQUE        reduce using rule 19 (U -> V SUM U .)
    PYC             reduce using rule 19 (U -> V SUM U .)
    RPAREN          reduce using rule 19 (U -> V SUM U .)


state 48

    (24) V -> LPAREN E RPAREN .

    SUM             reduce using rule 24 (V -> LPAREN E RPAREN .)
    MENORQUE        reduce using rule 24 (V -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 24 (V -> LPAREN E RPAREN .)
    PYC             reduce using rule 24 (V -> LPAREN E RPAREN .)


state 49

    (17) R -> U MENORQUE U .

    PYC             reduce using rule 17 (R -> U MENORQUE U .)
    RPAREN          reduce using rule 17 (R -> U MENORQUE U .)


state 50

    (4) B -> VAR T ID PYC .

    DO              reduce using rule 4 (B -> VAR T ID PYC .)
    VAR             reduce using rule 4 (B -> VAR T ID PYC .)
    ID              reduce using rule 4 (B -> VAR T ID PYC .)
    RETURN          reduce using rule 4 (B -> VAR T ID PYC .)
    PRINT           reduce using rule 4 (B -> VAR T ID PYC .)
    PROMPT          reduce using rule 4 (B -> VAR T ID PYC .)
    MMENOS          reduce using rule 4 (B -> VAR T ID PYC .)
    RLLAVE          reduce using rule 4 (B -> VAR T ID PYC .)
    $end            reduce using rule 4 (B -> VAR T ID PYC .)


state 51

    (12) S -> PRINT LPAREN E RPAREN . PYC

    PYC             shift and go to state 54


state 52

    (13) S -> PROMPT LPAREN E RPAREN PYC .

    DO              reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    ID              reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    RETURN          reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)
    $end            reduce using rule 13 (S -> PROMPT LPAREN E RPAREN PYC .)


state 53

    (1) B -> DO LLLAVE C RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 55


state 54

    (12) S -> PRINT LPAREN E RPAREN PYC .

    DO              reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    ID              reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    RETURN          reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)
    $end            reduce using rule 12 (S -> PRINT LPAREN E RPAREN PYC .)


state 55

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN . E RPAREN PYC
    (15) E -> . NEG R
    (16) E -> . R
    (17) R -> . U MENORQUE U
    (18) R -> . U
    (19) U -> . V SUM U
    (20) U -> . V
    (21) V -> . ENTERO
    (22) V -> . ID
    (23) V -> . CADENA
    (24) V -> . LPAREN E RPAREN

    NEG             shift and go to state 19
    ENTERO          shift and go to state 15
    ID              shift and go to state 21
    CADENA          shift and go to state 16
    LPAREN          shift and go to state 20

    V                              shift and go to state 18
    U                              shift and go to state 22
    R                              shift and go to state 17
    E                              shift and go to state 56

state 56

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 57


state 57

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 58


state 58

    (1) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .

    DO              reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    RETURN          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    $end            reduce using rule 1 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)

