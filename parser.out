Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LCORCH
    RCORCH
    PUNTO

Grammar

Rule 0     S' -> P
Rule 1     P -> B
Rule 2     P -> F
Rule 3     F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE
Rule 4     H -> T
Rule 5     H -> empty
Rule 6     A -> T ID K
Rule 7     A -> empty
Rule 8     K -> COMA T ID K
Rule 9     K -> empty
Rule 10    W -> D W
Rule 11    W -> empty
Rule 12    D -> VAR T ID PYC
Rule 13    D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
Rule 14    D -> IF LPAREN E RPAREN LLLAVE W RLLAVE
Rule 15    D -> G
Rule 16    W -> RETURN X PYC
Rule 17    X -> empty
Rule 18    X -> E
Rule 19    G -> ID ASIG E PYC
Rule 20    G -> ID LPAREN L RPAREN PYC
Rule 21    G -> PRINT LPAREN E RPAREN PYC
Rule 22    G -> PROMPT LPAREN E RPAREN PYC
Rule 23    G -> MMENOS ID PYC
Rule 24    B -> IF LPAREN E RPAREN LLLAVE C RLLAVE
Rule 25    S -> ID LPAREN L RPAREN PYC
Rule 26    L -> E Q
Rule 27    L -> empty
Rule 28    Q -> COMA E Q
Rule 29    Q -> empty
Rule 30    B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
Rule 31    C -> B C
Rule 32    C -> empty
Rule 33    B -> VAR T ID PYC
Rule 34    B -> S
Rule 35    S -> ID ASIG E PYC
Rule 36    T -> STRING
Rule 37    T -> BOOLEAN
Rule 38    T -> INT
Rule 39    S -> PRINT LPAREN E RPAREN PYC
Rule 40    S -> PROMPT LPAREN E RPAREN PYC
Rule 41    S -> MMENOS ID PYC
Rule 42    E -> NEG R
Rule 43    E -> R
Rule 44    R -> U MENORQUE U
Rule 45    R -> U
Rule 46    U -> V SUM U
Rule 47    U -> V
Rule 48    V -> ENTERO
Rule 49    V -> ID
Rule 50    V -> CADENA
Rule 51    V -> LPAREN E RPAREN
Rule 52    V -> ID LPAREN L RPAREN
Rule 53    empty -> <empty>

Terminals, with rules where they appear

ASIG                 : 19 35
BOOLEAN              : 37
CADENA               : 50
COMA                 : 8 28
DO                   : 13 30
ENTERO               : 48
FUNCTION             : 3
ID                   : 3 6 8 12 19 20 23 25 33 35 41 49 52
IF                   : 14 24
INT                  : 38
LCORCH               : 
LLLAVE               : 3 13 14 24 30
LPAREN               : 3 13 14 20 21 22 24 25 30 39 40 51 52
MENORQUE             : 44
MMENOS               : 23 41
NEG                  : 42
PRINT                : 21 39
PROMPT               : 22 40
PUNTO                : 
PYC                  : 12 13 16 19 20 21 22 23 25 30 33 35 39 40 41
RCORCH               : 
RETURN               : 16
RLLAVE               : 3 13 14 24 30
RPAREN               : 3 13 14 20 21 22 24 25 30 39 40 51 52
STRING               : 36
SUM                  : 46
VAR                  : 12 33
WHILE                : 13 30
error                : 

Nonterminals, with rules where they appear

A                    : 3
B                    : 1 31
C                    : 24 30 31
D                    : 10
E                    : 13 14 18 19 21 22 24 26 28 30 35 39 40 51
F                    : 2
G                    : 15
H                    : 3
K                    : 6 8
L                    : 20 25 52
P                    : 0
Q                    : 26 28
R                    : 42 43
S                    : 34
T                    : 4 6 8 12 33
U                    : 44 44 45 46
V                    : 46 47
W                    : 3 10 13 14
X                    : 16
empty                : 5 7 9 11 17 27 29 32

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . B
    (2) P -> . F
    (24) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (3) F -> . FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE
    (25) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 3
    DO              shift and go to state 10
    VAR             shift and go to state 1
    FUNCTION        shift and go to state 7
    ID              shift and go to state 5
    PRINT           shift and go to state 8
    PROMPT          shift and go to state 6
    MMENOS          shift and go to state 12

    B                              shift and go to state 4
    F                              shift and go to state 11
    S                              shift and go to state 2
    P                              shift and go to state 9

state 1

    (33) B -> VAR . T ID PYC
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT

    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    INT             shift and go to state 16

    T                              shift and go to state 13

state 2

    (34) B -> S .

    IF              reduce using rule 34 (B -> S .)
    DO              reduce using rule 34 (B -> S .)
    VAR             reduce using rule 34 (B -> S .)
    ID              reduce using rule 34 (B -> S .)
    PRINT           reduce using rule 34 (B -> S .)
    PROMPT          reduce using rule 34 (B -> S .)
    MMENOS          reduce using rule 34 (B -> S .)
    RLLAVE          reduce using rule 34 (B -> S .)
    $end            reduce using rule 34 (B -> S .)


state 3

    (24) B -> IF . LPAREN E RPAREN LLLAVE C RLLAVE

    LPAREN          shift and go to state 17


state 4

    (1) P -> B .

    $end            reduce using rule 1 (P -> B .)


state 5

    (25) S -> ID . LPAREN L RPAREN PYC
    (35) S -> ID . ASIG E PYC

    LPAREN          shift and go to state 19
    ASIG            shift and go to state 18


state 6

    (40) S -> PROMPT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 20


state 7

    (3) F -> FUNCTION . H ID LPAREN A RPAREN LLLAVE W RLLAVE
    (4) H -> . T
    (5) H -> . empty
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT
    (53) empty -> .

    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    INT             shift and go to state 16
    ID              reduce using rule 53 (empty -> .)

    empty                          shift and go to state 23
    T                              shift and go to state 22
    H                              shift and go to state 21

state 8

    (39) S -> PRINT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 24


state 9

    (0) S' -> P .



state 10

    (30) B -> DO . LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 25


state 11

    (2) P -> F .

    $end            reduce using rule 2 (P -> F .)


state 12

    (41) S -> MMENOS . ID PYC

    ID              shift and go to state 26


state 13

    (33) B -> VAR T . ID PYC

    ID              shift and go to state 27


state 14

    (36) T -> STRING .

    ID              reduce using rule 36 (T -> STRING .)


state 15

    (37) T -> BOOLEAN .

    ID              reduce using rule 37 (T -> BOOLEAN .)


state 16

    (38) T -> INT .

    ID              reduce using rule 38 (T -> INT .)


state 17

    (24) B -> IF LPAREN . E RPAREN LLLAVE C RLLAVE
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    E                              shift and go to state 32
    U                              shift and go to state 29
    V                              shift and go to state 33
    R                              shift and go to state 35

state 18

    (35) S -> ID ASIG . E PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 37
    U                              shift and go to state 29
    V                              shift and go to state 33

state 19

    (25) S -> ID LPAREN . L RPAREN PYC
    (26) L -> . E Q
    (27) L -> . empty
    (42) E -> . NEG R
    (43) E -> . R
    (53) empty -> .
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    RPAREN          reduce using rule 53 (empty -> .)
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 38
    U                              shift and go to state 29
    empty                          shift and go to state 39
    L                              shift and go to state 40
    V                              shift and go to state 33

state 20

    (40) S -> PROMPT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 41
    U                              shift and go to state 29
    V                              shift and go to state 33

state 21

    (3) F -> FUNCTION H . ID LPAREN A RPAREN LLLAVE W RLLAVE

    ID              shift and go to state 42


state 22

    (4) H -> T .

    ID              reduce using rule 4 (H -> T .)


state 23

    (5) H -> empty .

    ID              reduce using rule 5 (H -> empty .)


state 24

    (39) S -> PRINT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 43
    U                              shift and go to state 29
    V                              shift and go to state 33

state 25

    (30) B -> DO LLLAVE . C RLLAVE WHILE LPAREN E RPAREN PYC
    (31) C -> . B C
    (32) C -> . empty
    (24) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (53) empty -> .
    (25) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 3
    DO              shift and go to state 10
    VAR             shift and go to state 1
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 5
    PRINT           shift and go to state 8
    PROMPT          shift and go to state 6
    MMENOS          shift and go to state 12

    B                              shift and go to state 44
    C                              shift and go to state 45
    S                              shift and go to state 2
    empty                          shift and go to state 46

state 26

    (41) S -> MMENOS ID . PYC

    PYC             shift and go to state 47


state 27

    (33) B -> VAR T ID . PYC

    PYC             shift and go to state 48


state 28

    (51) V -> LPAREN . E RPAREN
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 49
    U                              shift and go to state 29
    V                              shift and go to state 33

state 29

    (44) R -> U . MENORQUE U
    (45) R -> U .

    MENORQUE        shift and go to state 50
    COMA            reduce using rule 45 (R -> U .)
    RPAREN          reduce using rule 45 (R -> U .)
    PYC             reduce using rule 45 (R -> U .)


state 30

    (48) V -> ENTERO .

    SUM             reduce using rule 48 (V -> ENTERO .)
    MENORQUE        reduce using rule 48 (V -> ENTERO .)
    RPAREN          reduce using rule 48 (V -> ENTERO .)
    COMA            reduce using rule 48 (V -> ENTERO .)
    PYC             reduce using rule 48 (V -> ENTERO .)


state 31

    (49) V -> ID .
    (52) V -> ID . LPAREN L RPAREN

    SUM             reduce using rule 49 (V -> ID .)
    MENORQUE        reduce using rule 49 (V -> ID .)
    RPAREN          reduce using rule 49 (V -> ID .)
    COMA            reduce using rule 49 (V -> ID .)
    PYC             reduce using rule 49 (V -> ID .)
    LPAREN          shift and go to state 51


state 32

    (24) B -> IF LPAREN E . RPAREN LLLAVE C RLLAVE

    RPAREN          shift and go to state 52


state 33

    (46) U -> V . SUM U
    (47) U -> V .

    SUM             shift and go to state 53
    MENORQUE        reduce using rule 47 (U -> V .)
    RPAREN          reduce using rule 47 (U -> V .)
    PYC             reduce using rule 47 (U -> V .)
    COMA            reduce using rule 47 (U -> V .)


state 34

    (42) E -> NEG . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    V                              shift and go to state 33
    R                              shift and go to state 54
    U                              shift and go to state 29

state 35

    (43) E -> R .

    RPAREN          reduce using rule 43 (E -> R .)
    COMA            reduce using rule 43 (E -> R .)
    PYC             reduce using rule 43 (E -> R .)


state 36

    (50) V -> CADENA .

    SUM             reduce using rule 50 (V -> CADENA .)
    MENORQUE        reduce using rule 50 (V -> CADENA .)
    RPAREN          reduce using rule 50 (V -> CADENA .)
    COMA            reduce using rule 50 (V -> CADENA .)
    PYC             reduce using rule 50 (V -> CADENA .)


state 37

    (35) S -> ID ASIG E . PYC

    PYC             shift and go to state 55


state 38

    (26) L -> E . Q
    (28) Q -> . COMA E Q
    (29) Q -> . empty
    (53) empty -> .

    COMA            shift and go to state 56
    RPAREN          reduce using rule 53 (empty -> .)

    empty                          shift and go to state 57
    Q                              shift and go to state 58

state 39

    (27) L -> empty .

    RPAREN          reduce using rule 27 (L -> empty .)


state 40

    (25) S -> ID LPAREN L . RPAREN PYC

    RPAREN          shift and go to state 59


state 41

    (40) S -> PROMPT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 60


state 42

    (3) F -> FUNCTION H ID . LPAREN A RPAREN LLLAVE W RLLAVE

    LPAREN          shift and go to state 61


state 43

    (39) S -> PRINT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 62


state 44

    (31) C -> B . C
    (31) C -> . B C
    (32) C -> . empty
    (24) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (53) empty -> .
    (25) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 3
    DO              shift and go to state 10
    VAR             shift and go to state 1
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 5
    PRINT           shift and go to state 8
    PROMPT          shift and go to state 6
    MMENOS          shift and go to state 12

    B                              shift and go to state 44
    C                              shift and go to state 63
    S                              shift and go to state 2
    empty                          shift and go to state 46

state 45

    (30) B -> DO LLLAVE C . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 64


state 46

    (32) C -> empty .

    RLLAVE          reduce using rule 32 (C -> empty .)


state 47

    (41) S -> MMENOS ID PYC .

    IF              reduce using rule 41 (S -> MMENOS ID PYC .)
    DO              reduce using rule 41 (S -> MMENOS ID PYC .)
    VAR             reduce using rule 41 (S -> MMENOS ID PYC .)
    ID              reduce using rule 41 (S -> MMENOS ID PYC .)
    PRINT           reduce using rule 41 (S -> MMENOS ID PYC .)
    PROMPT          reduce using rule 41 (S -> MMENOS ID PYC .)
    MMENOS          reduce using rule 41 (S -> MMENOS ID PYC .)
    RLLAVE          reduce using rule 41 (S -> MMENOS ID PYC .)
    $end            reduce using rule 41 (S -> MMENOS ID PYC .)


state 48

    (33) B -> VAR T ID PYC .

    IF              reduce using rule 33 (B -> VAR T ID PYC .)
    DO              reduce using rule 33 (B -> VAR T ID PYC .)
    VAR             reduce using rule 33 (B -> VAR T ID PYC .)
    ID              reduce using rule 33 (B -> VAR T ID PYC .)
    PRINT           reduce using rule 33 (B -> VAR T ID PYC .)
    PROMPT          reduce using rule 33 (B -> VAR T ID PYC .)
    MMENOS          reduce using rule 33 (B -> VAR T ID PYC .)
    RLLAVE          reduce using rule 33 (B -> VAR T ID PYC .)
    $end            reduce using rule 33 (B -> VAR T ID PYC .)


state 49

    (51) V -> LPAREN E . RPAREN

    RPAREN          shift and go to state 65


state 50

    (44) R -> U MENORQUE . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    V                              shift and go to state 33
    U                              shift and go to state 66

state 51

    (52) V -> ID LPAREN . L RPAREN
    (26) L -> . E Q
    (27) L -> . empty
    (42) E -> . NEG R
    (43) E -> . R
    (53) empty -> .
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    RPAREN          reduce using rule 53 (empty -> .)
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 38
    U                              shift and go to state 29
    empty                          shift and go to state 39
    L                              shift and go to state 67
    V                              shift and go to state 33

state 52

    (24) B -> IF LPAREN E RPAREN . LLLAVE C RLLAVE

    LLLAVE          shift and go to state 68


state 53

    (46) U -> V SUM . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    V                              shift and go to state 33
    U                              shift and go to state 69

state 54

    (42) E -> NEG R .

    RPAREN          reduce using rule 42 (E -> NEG R .)
    COMA            reduce using rule 42 (E -> NEG R .)
    PYC             reduce using rule 42 (E -> NEG R .)


state 55

    (35) S -> ID ASIG E PYC .

    IF              reduce using rule 35 (S -> ID ASIG E PYC .)
    DO              reduce using rule 35 (S -> ID ASIG E PYC .)
    VAR             reduce using rule 35 (S -> ID ASIG E PYC .)
    ID              reduce using rule 35 (S -> ID ASIG E PYC .)
    PRINT           reduce using rule 35 (S -> ID ASIG E PYC .)
    PROMPT          reduce using rule 35 (S -> ID ASIG E PYC .)
    MMENOS          reduce using rule 35 (S -> ID ASIG E PYC .)
    RLLAVE          reduce using rule 35 (S -> ID ASIG E PYC .)
    $end            reduce using rule 35 (S -> ID ASIG E PYC .)


state 56

    (28) Q -> COMA . E Q
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    E                              shift and go to state 70
    U                              shift and go to state 29
    V                              shift and go to state 33
    R                              shift and go to state 35

state 57

    (29) Q -> empty .

    RPAREN          reduce using rule 29 (Q -> empty .)


state 58

    (26) L -> E Q .

    RPAREN          reduce using rule 26 (L -> E Q .)


state 59

    (25) S -> ID LPAREN L RPAREN . PYC

    PYC             shift and go to state 71


state 60

    (40) S -> PROMPT LPAREN E RPAREN . PYC

    PYC             shift and go to state 72


state 61

    (3) F -> FUNCTION H ID LPAREN . A RPAREN LLLAVE W RLLAVE
    (6) A -> . T ID K
    (7) A -> . empty
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT
    (53) empty -> .

    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    INT             shift and go to state 16
    RPAREN          reduce using rule 53 (empty -> .)

    T                              shift and go to state 74
    A                              shift and go to state 73
    empty                          shift and go to state 75

state 62

    (39) S -> PRINT LPAREN E RPAREN . PYC

    PYC             shift and go to state 76


state 63

    (31) C -> B C .

    RLLAVE          reduce using rule 31 (C -> B C .)


state 64

    (30) B -> DO LLLAVE C RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 77


state 65

    (51) V -> LPAREN E RPAREN .

    SUM             reduce using rule 51 (V -> LPAREN E RPAREN .)
    MENORQUE        reduce using rule 51 (V -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 51 (V -> LPAREN E RPAREN .)
    COMA            reduce using rule 51 (V -> LPAREN E RPAREN .)
    PYC             reduce using rule 51 (V -> LPAREN E RPAREN .)


state 66

    (44) R -> U MENORQUE U .

    COMA            reduce using rule 44 (R -> U MENORQUE U .)
    RPAREN          reduce using rule 44 (R -> U MENORQUE U .)
    PYC             reduce using rule 44 (R -> U MENORQUE U .)


state 67

    (52) V -> ID LPAREN L . RPAREN

    RPAREN          shift and go to state 78


state 68

    (24) B -> IF LPAREN E RPAREN LLLAVE . C RLLAVE
    (31) C -> . B C
    (32) C -> . empty
    (24) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (30) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (33) B -> . VAR T ID PYC
    (34) B -> . S
    (53) empty -> .
    (25) S -> . ID LPAREN L RPAREN PYC
    (35) S -> . ID ASIG E PYC
    (39) S -> . PRINT LPAREN E RPAREN PYC
    (40) S -> . PROMPT LPAREN E RPAREN PYC
    (41) S -> . MMENOS ID PYC

    IF              shift and go to state 3
    DO              shift and go to state 10
    VAR             shift and go to state 1
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 5
    PRINT           shift and go to state 8
    PROMPT          shift and go to state 6
    MMENOS          shift and go to state 12

    B                              shift and go to state 44
    C                              shift and go to state 79
    S                              shift and go to state 2
    empty                          shift and go to state 46

state 69

    (46) U -> V SUM U .

    MENORQUE        reduce using rule 46 (U -> V SUM U .)
    RPAREN          reduce using rule 46 (U -> V SUM U .)
    PYC             reduce using rule 46 (U -> V SUM U .)
    COMA            reduce using rule 46 (U -> V SUM U .)


state 70

    (28) Q -> COMA E . Q
    (28) Q -> . COMA E Q
    (29) Q -> . empty
    (53) empty -> .

    COMA            shift and go to state 56
    RPAREN          reduce using rule 53 (empty -> .)

    empty                          shift and go to state 57
    Q                              shift and go to state 80

state 71

    (25) S -> ID LPAREN L RPAREN PYC .

    IF              reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    DO              reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    VAR             reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    ID              reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    PRINT           reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    PROMPT          reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    MMENOS          reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    RLLAVE          reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)
    $end            reduce using rule 25 (S -> ID LPAREN L RPAREN PYC .)


state 72

    (40) S -> PROMPT LPAREN E RPAREN PYC .

    IF              reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    DO              reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    ID              reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)
    $end            reduce using rule 40 (S -> PROMPT LPAREN E RPAREN PYC .)


state 73

    (3) F -> FUNCTION H ID LPAREN A . RPAREN LLLAVE W RLLAVE

    RPAREN          shift and go to state 81


state 74

    (6) A -> T . ID K

    ID              shift and go to state 82


state 75

    (7) A -> empty .

    RPAREN          reduce using rule 7 (A -> empty .)


state 76

    (39) S -> PRINT LPAREN E RPAREN PYC .

    IF              reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    DO              reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    ID              reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)
    $end            reduce using rule 39 (S -> PRINT LPAREN E RPAREN PYC .)


state 77

    (30) B -> DO LLLAVE C RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 83


state 78

    (52) V -> ID LPAREN L RPAREN .

    SUM             reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    MENORQUE        reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    RPAREN          reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    COMA            reduce using rule 52 (V -> ID LPAREN L RPAREN .)
    PYC             reduce using rule 52 (V -> ID LPAREN L RPAREN .)


state 79

    (24) B -> IF LPAREN E RPAREN LLLAVE C . RLLAVE

    RLLAVE          shift and go to state 84


state 80

    (28) Q -> COMA E Q .

    RPAREN          reduce using rule 28 (Q -> COMA E Q .)


state 81

    (3) F -> FUNCTION H ID LPAREN A RPAREN . LLLAVE W RLLAVE

    LLLAVE          shift and go to state 85


state 82

    (6) A -> T ID . K
    (8) K -> . COMA T ID K
    (9) K -> . empty
    (53) empty -> .

    COMA            shift and go to state 86
    RPAREN          reduce using rule 53 (empty -> .)

    empty                          shift and go to state 87
    K                              shift and go to state 88

state 83

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    E                              shift and go to state 89
    U                              shift and go to state 29
    V                              shift and go to state 33
    R                              shift and go to state 35

state 84

    (24) B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .

    IF              reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    DO              reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    VAR             reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    ID              reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    PRINT           reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    PROMPT          reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    MMENOS          reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    RLLAVE          reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    $end            reduce using rule 24 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)


state 85

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE . W RLLAVE
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (19) G -> . ID ASIG E PYC
    (20) G -> . ID LPAREN L RPAREN PYC
    (21) G -> . PRINT LPAREN E RPAREN PYC
    (22) G -> . PROMPT LPAREN E RPAREN PYC
    (23) G -> . MMENOS ID PYC

    RETURN          shift and go to state 96
    VAR             shift and go to state 90
    DO              shift and go to state 97
    IF              shift and go to state 91
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 92
    PRINT           shift and go to state 95
    PROMPT          shift and go to state 93
    MMENOS          shift and go to state 101

    D                              shift and go to state 100
    W                              shift and go to state 98
    empty                          shift and go to state 94
    G                              shift and go to state 99

state 86

    (8) K -> COMA . T ID K
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT

    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    INT             shift and go to state 16

    T                              shift and go to state 102

state 87

    (9) K -> empty .

    RPAREN          reduce using rule 9 (K -> empty .)


state 88

    (6) A -> T ID K .

    RPAREN          reduce using rule 6 (A -> T ID K .)


state 89

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 103


state 90

    (12) D -> VAR . T ID PYC
    (36) T -> . STRING
    (37) T -> . BOOLEAN
    (38) T -> . INT

    STRING          shift and go to state 14
    BOOLEAN         shift and go to state 15
    INT             shift and go to state 16

    T                              shift and go to state 104

state 91

    (14) D -> IF . LPAREN E RPAREN LLLAVE W RLLAVE

    LPAREN          shift and go to state 105


state 92

    (19) G -> ID . ASIG E PYC
    (20) G -> ID . LPAREN L RPAREN PYC

    ASIG            shift and go to state 106
    LPAREN          shift and go to state 107


state 93

    (22) G -> PROMPT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 108


state 94

    (11) W -> empty .

    RLLAVE          reduce using rule 11 (W -> empty .)


state 95

    (21) G -> PRINT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 109


state 96

    (16) W -> RETURN . X PYC
    (17) X -> . empty
    (18) X -> . E
    (53) empty -> .
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    PYC             reduce using rule 53 (empty -> .)
    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    E                              shift and go to state 110
    X                              shift and go to state 112
    empty                          shift and go to state 111
    R                              shift and go to state 35
    V                              shift and go to state 33
    U                              shift and go to state 29

state 97

    (13) D -> DO . LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 113


state 98

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W . RLLAVE

    RLLAVE          shift and go to state 114


state 99

    (15) D -> G .

    RETURN          reduce using rule 15 (D -> G .)
    VAR             reduce using rule 15 (D -> G .)
    DO              reduce using rule 15 (D -> G .)
    IF              reduce using rule 15 (D -> G .)
    ID              reduce using rule 15 (D -> G .)
    PRINT           reduce using rule 15 (D -> G .)
    PROMPT          reduce using rule 15 (D -> G .)
    MMENOS          reduce using rule 15 (D -> G .)
    RLLAVE          reduce using rule 15 (D -> G .)


state 100

    (10) W -> D . W
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (19) G -> . ID ASIG E PYC
    (20) G -> . ID LPAREN L RPAREN PYC
    (21) G -> . PRINT LPAREN E RPAREN PYC
    (22) G -> . PROMPT LPAREN E RPAREN PYC
    (23) G -> . MMENOS ID PYC

    RETURN          shift and go to state 96
    VAR             shift and go to state 90
    DO              shift and go to state 97
    IF              shift and go to state 91
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 92
    PRINT           shift and go to state 95
    PROMPT          shift and go to state 93
    MMENOS          shift and go to state 101

    W                              shift and go to state 115
    D                              shift and go to state 100
    empty                          shift and go to state 94
    G                              shift and go to state 99

state 101

    (23) G -> MMENOS . ID PYC

    ID              shift and go to state 116


state 102

    (8) K -> COMA T . ID K

    ID              shift and go to state 117


state 103

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 118


state 104

    (12) D -> VAR T . ID PYC

    ID              shift and go to state 119


state 105

    (14) D -> IF LPAREN . E RPAREN LLLAVE W RLLAVE
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    E                              shift and go to state 120
    U                              shift and go to state 29
    V                              shift and go to state 33
    R                              shift and go to state 35

state 106

    (19) G -> ID ASIG . E PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 121
    U                              shift and go to state 29
    V                              shift and go to state 33

state 107

    (20) G -> ID LPAREN . L RPAREN PYC
    (26) L -> . E Q
    (27) L -> . empty
    (42) E -> . NEG R
    (43) E -> . R
    (53) empty -> .
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    RPAREN          reduce using rule 53 (empty -> .)
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 38
    U                              shift and go to state 29
    empty                          shift and go to state 39
    L                              shift and go to state 122
    V                              shift and go to state 33

state 108

    (22) G -> PROMPT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 123
    U                              shift and go to state 29
    V                              shift and go to state 33

state 109

    (21) G -> PRINT LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    R                              shift and go to state 35
    E                              shift and go to state 124
    U                              shift and go to state 29
    V                              shift and go to state 33

state 110

    (18) X -> E .

    PYC             reduce using rule 18 (X -> E .)


state 111

    (17) X -> empty .

    PYC             reduce using rule 17 (X -> empty .)


state 112

    (16) W -> RETURN X . PYC

    PYC             shift and go to state 125


state 113

    (13) D -> DO LLLAVE . W RLLAVE WHILE LPAREN E RPAREN PYC
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (19) G -> . ID ASIG E PYC
    (20) G -> . ID LPAREN L RPAREN PYC
    (21) G -> . PRINT LPAREN E RPAREN PYC
    (22) G -> . PROMPT LPAREN E RPAREN PYC
    (23) G -> . MMENOS ID PYC

    RETURN          shift and go to state 96
    VAR             shift and go to state 90
    DO              shift and go to state 97
    IF              shift and go to state 91
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 92
    PRINT           shift and go to state 95
    PROMPT          shift and go to state 93
    MMENOS          shift and go to state 101

    W                              shift and go to state 126
    D                              shift and go to state 100
    empty                          shift and go to state 94
    G                              shift and go to state 99

state 114

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE .

    $end            reduce using rule 3 (F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE .)


state 115

    (10) W -> D W .

    RLLAVE          reduce using rule 10 (W -> D W .)


state 116

    (23) G -> MMENOS ID . PYC

    PYC             shift and go to state 127


state 117

    (8) K -> COMA T ID . K
    (8) K -> . COMA T ID K
    (9) K -> . empty
    (53) empty -> .

    COMA            shift and go to state 86
    RPAREN          reduce using rule 53 (empty -> .)

    empty                          shift and go to state 87
    K                              shift and go to state 128

state 118

    (30) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .

    IF              reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    DO              reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    $end            reduce using rule 30 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)


state 119

    (12) D -> VAR T ID . PYC

    PYC             shift and go to state 129


state 120

    (14) D -> IF LPAREN E . RPAREN LLLAVE W RLLAVE

    RPAREN          shift and go to state 130


state 121

    (19) G -> ID ASIG E . PYC

    PYC             shift and go to state 131


state 122

    (20) G -> ID LPAREN L . RPAREN PYC

    RPAREN          shift and go to state 132


state 123

    (22) G -> PROMPT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 133


state 124

    (21) G -> PRINT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 134


state 125

    (16) W -> RETURN X PYC .

    RLLAVE          reduce using rule 16 (W -> RETURN X PYC .)


state 126

    (13) D -> DO LLLAVE W . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 135


state 127

    (23) G -> MMENOS ID PYC .

    RETURN          reduce using rule 23 (G -> MMENOS ID PYC .)
    VAR             reduce using rule 23 (G -> MMENOS ID PYC .)
    DO              reduce using rule 23 (G -> MMENOS ID PYC .)
    IF              reduce using rule 23 (G -> MMENOS ID PYC .)
    ID              reduce using rule 23 (G -> MMENOS ID PYC .)
    PRINT           reduce using rule 23 (G -> MMENOS ID PYC .)
    PROMPT          reduce using rule 23 (G -> MMENOS ID PYC .)
    MMENOS          reduce using rule 23 (G -> MMENOS ID PYC .)
    RLLAVE          reduce using rule 23 (G -> MMENOS ID PYC .)


state 128

    (8) K -> COMA T ID K .

    RPAREN          reduce using rule 8 (K -> COMA T ID K .)


state 129

    (12) D -> VAR T ID PYC .

    RETURN          reduce using rule 12 (D -> VAR T ID PYC .)
    VAR             reduce using rule 12 (D -> VAR T ID PYC .)
    DO              reduce using rule 12 (D -> VAR T ID PYC .)
    IF              reduce using rule 12 (D -> VAR T ID PYC .)
    ID              reduce using rule 12 (D -> VAR T ID PYC .)
    PRINT           reduce using rule 12 (D -> VAR T ID PYC .)
    PROMPT          reduce using rule 12 (D -> VAR T ID PYC .)
    MMENOS          reduce using rule 12 (D -> VAR T ID PYC .)
    RLLAVE          reduce using rule 12 (D -> VAR T ID PYC .)


state 130

    (14) D -> IF LPAREN E RPAREN . LLLAVE W RLLAVE

    LLLAVE          shift and go to state 136


state 131

    (19) G -> ID ASIG E PYC .

    RETURN          reduce using rule 19 (G -> ID ASIG E PYC .)
    VAR             reduce using rule 19 (G -> ID ASIG E PYC .)
    DO              reduce using rule 19 (G -> ID ASIG E PYC .)
    IF              reduce using rule 19 (G -> ID ASIG E PYC .)
    ID              reduce using rule 19 (G -> ID ASIG E PYC .)
    PRINT           reduce using rule 19 (G -> ID ASIG E PYC .)
    PROMPT          reduce using rule 19 (G -> ID ASIG E PYC .)
    MMENOS          reduce using rule 19 (G -> ID ASIG E PYC .)
    RLLAVE          reduce using rule 19 (G -> ID ASIG E PYC .)


state 132

    (20) G -> ID LPAREN L RPAREN . PYC

    PYC             shift and go to state 137


state 133

    (22) G -> PROMPT LPAREN E RPAREN . PYC

    PYC             shift and go to state 138


state 134

    (21) G -> PRINT LPAREN E RPAREN . PYC

    PYC             shift and go to state 139


state 135

    (13) D -> DO LLLAVE W RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 140


state 136

    (14) D -> IF LPAREN E RPAREN LLLAVE . W RLLAVE
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . G
    (53) empty -> .
    (19) G -> . ID ASIG E PYC
    (20) G -> . ID LPAREN L RPAREN PYC
    (21) G -> . PRINT LPAREN E RPAREN PYC
    (22) G -> . PROMPT LPAREN E RPAREN PYC
    (23) G -> . MMENOS ID PYC

    RETURN          shift and go to state 96
    VAR             shift and go to state 90
    DO              shift and go to state 97
    IF              shift and go to state 91
    RLLAVE          reduce using rule 53 (empty -> .)
    ID              shift and go to state 92
    PRINT           shift and go to state 95
    PROMPT          shift and go to state 93
    MMENOS          shift and go to state 101

    W                              shift and go to state 141
    D                              shift and go to state 100
    empty                          shift and go to state 94
    G                              shift and go to state 99

state 137

    (20) G -> ID LPAREN L RPAREN PYC .

    RETURN          reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    VAR             reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    DO              reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    IF              reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    ID              reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    PRINT           reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    PROMPT          reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    MMENOS          reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)
    RLLAVE          reduce using rule 20 (G -> ID LPAREN L RPAREN PYC .)


state 138

    (22) G -> PROMPT LPAREN E RPAREN PYC .

    RETURN          reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    DO              reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    IF              reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    ID              reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 22 (G -> PROMPT LPAREN E RPAREN PYC .)


state 139

    (21) G -> PRINT LPAREN E RPAREN PYC .

    RETURN          reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    DO              reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    IF              reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    ID              reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 21 (G -> PRINT LPAREN E RPAREN PYC .)


state 140

    (13) D -> DO LLLAVE W RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 142


state 141

    (14) D -> IF LPAREN E RPAREN LLLAVE W . RLLAVE

    RLLAVE          shift and go to state 143


state 142

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN . E RPAREN PYC
    (42) E -> . NEG R
    (43) E -> . R
    (44) R -> . U MENORQUE U
    (45) R -> . U
    (46) U -> . V SUM U
    (47) U -> . V
    (48) V -> . ENTERO
    (49) V -> . ID
    (50) V -> . CADENA
    (51) V -> . LPAREN E RPAREN
    (52) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 34
    ENTERO          shift and go to state 30
    ID              shift and go to state 31
    CADENA          shift and go to state 36
    LPAREN          shift and go to state 28

    E                              shift and go to state 144
    U                              shift and go to state 29
    V                              shift and go to state 33
    R                              shift and go to state 35

state 143

    (14) D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .

    RETURN          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    VAR             reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    DO              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    IF              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    ID              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    PRINT           reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    PROMPT          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    MMENOS          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    RLLAVE          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)


state 144

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 145


state 145

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 146


state 146

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .

    RETURN          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    DO              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    IF              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)

