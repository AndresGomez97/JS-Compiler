Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    LCORCH
    PUNTO
    RCORCH

Grammar

Rule 0     S' -> P
Rule 1     P -> B
Rule 2     P -> F
Rule 3     F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE
Rule 4     H -> T
Rule 5     H -> empty
Rule 6     A -> T ID K
Rule 7     A -> empty
Rule 8     K -> COMA T ID K
Rule 9     K -> empty
Rule 10    W -> D W
Rule 11    W -> empty
Rule 12    D -> VAR T ID PYC
Rule 13    D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
Rule 14    D -> IF LPAREN E RPAREN LLLAVE W RLLAVE
Rule 15    D -> S
Rule 16    W -> RETURN X PYC
Rule 17    X -> empty
Rule 18    X -> E
Rule 19    B -> IF LPAREN E RPAREN LLLAVE C RLLAVE
Rule 20    S -> ID LPAREN L RPAREN PYC
Rule 21    L -> E Q
Rule 22    L -> empty
Rule 23    Q -> COMA E Q
Rule 24    Q -> empty
Rule 25    B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
Rule 26    C -> B C
Rule 27    C -> empty
Rule 28    B -> VAR T ID PYC
Rule 29    B -> S
Rule 30    S -> ID ASIG E PYC
Rule 31    T -> STRING
Rule 32    T -> BOOLEAN
Rule 33    T -> INT
Rule 34    S -> PRINT LPAREN E RPAREN PYC
Rule 35    S -> PROMPT LPAREN ID RPAREN PYC
Rule 36    S -> MMENOS ID PYC
Rule 37    E -> NEG R
Rule 38    E -> R
Rule 39    R -> U MENORQUE U
Rule 40    R -> U
Rule 41    U -> V SUM U
Rule 42    U -> V
Rule 43    V -> ENTERO
Rule 44    V -> ID
Rule 45    V -> CADENA
Rule 46    V -> LPAREN E RPAREN
Rule 47    V -> ID LPAREN L RPAREN
Rule 48    empty -> <empty>

Terminals, with rules where they appear

ASIG                 : 30
BOOLEAN              : 32
CADENA               : 45
COMA                 : 8 23
DO                   : 13 25
ENTERO               : 43
FUNCTION             : 3
ID                   : 3 6 8 12 20 28 30 35 36 44 47
IF                   : 14 19
INT                  : 33
LCORCH               : 
LLLAVE               : 3 13 14 19 25
LPAREN               : 3 13 14 19 20 25 34 35 46 47
MENORQUE             : 39
MMENOS               : 36
NEG                  : 37
PRINT                : 34
PROMPT               : 35
PUNTO                : 
PYC                  : 12 13 16 20 25 28 30 34 35 36
RCORCH               : 
RETURN               : 16
RLLAVE               : 3 13 14 19 25
RPAREN               : 3 13 14 19 20 25 34 35 46 47
STRING               : 31
SUM                  : 41
VAR                  : 12 28
WHILE                : 13 25
error                : 

Nonterminals, with rules where they appear

A                    : 3
B                    : 1 26
C                    : 19 25 26
D                    : 10
E                    : 13 14 18 19 21 23 25 30 34 46
F                    : 2
H                    : 3
K                    : 6 8
L                    : 20 47
P                    : 0
Q                    : 21 23
R                    : 37 38
S                    : 15 29
T                    : 4 6 8 12 28
U                    : 39 39 40 41
V                    : 41 42
W                    : 3 10 13 14
X                    : 16
empty                : 5 7 9 11 17 22 24 27

Parsing method: LALR

state 0

    (0) S' -> . P
    (1) P -> . B
    (2) P -> . F
    (19) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (25) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (28) B -> . VAR T ID PYC
    (29) B -> . S
    (3) F -> . FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    IF              shift and go to state 8
    DO              shift and go to state 9
    VAR             shift and go to state 6
    FUNCTION        shift and go to state 4
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    P                              shift and go to state 1
    B                              shift and go to state 7
    S                              shift and go to state 10
    F                              shift and go to state 3

state 1

    (0) S' -> P .



state 2

    (35) S -> PROMPT . LPAREN ID RPAREN PYC

    LPAREN          shift and go to state 13


state 3

    (2) P -> F .

    $end            reduce using rule 2 (P -> F .)


state 4

    (3) F -> FUNCTION . H ID LPAREN A RPAREN LLLAVE W RLLAVE
    (4) H -> . T
    (5) H -> . empty
    (31) T -> . STRING
    (32) T -> . BOOLEAN
    (33) T -> . INT
    (48) empty -> .

    STRING          shift and go to state 16
    BOOLEAN         shift and go to state 14
    INT             shift and go to state 15
    ID              reduce using rule 48 (empty -> .)

    empty                          shift and go to state 18
    H                              shift and go to state 19
    T                              shift and go to state 17

state 5

    (36) S -> MMENOS . ID PYC

    ID              shift and go to state 20


state 6

    (28) B -> VAR . T ID PYC
    (31) T -> . STRING
    (32) T -> . BOOLEAN
    (33) T -> . INT

    STRING          shift and go to state 16
    BOOLEAN         shift and go to state 14
    INT             shift and go to state 15

    T                              shift and go to state 21

state 7

    (1) P -> B .

    $end            reduce using rule 1 (P -> B .)


state 8

    (19) B -> IF . LPAREN E RPAREN LLLAVE C RLLAVE

    LPAREN          shift and go to state 22


state 9

    (25) B -> DO . LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 23


state 10

    (29) B -> S .

    IF              reduce using rule 29 (B -> S .)
    DO              reduce using rule 29 (B -> S .)
    VAR             reduce using rule 29 (B -> S .)
    ID              reduce using rule 29 (B -> S .)
    PRINT           reduce using rule 29 (B -> S .)
    PROMPT          reduce using rule 29 (B -> S .)
    MMENOS          reduce using rule 29 (B -> S .)
    RLLAVE          reduce using rule 29 (B -> S .)
    $end            reduce using rule 29 (B -> S .)


state 11

    (34) S -> PRINT . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 24


state 12

    (20) S -> ID . LPAREN L RPAREN PYC
    (30) S -> ID . ASIG E PYC

    LPAREN          shift and go to state 25
    ASIG            shift and go to state 26


state 13

    (35) S -> PROMPT LPAREN . ID RPAREN PYC

    ID              shift and go to state 27


state 14

    (32) T -> BOOLEAN .

    ID              reduce using rule 32 (T -> BOOLEAN .)


state 15

    (33) T -> INT .

    ID              reduce using rule 33 (T -> INT .)


state 16

    (31) T -> STRING .

    ID              reduce using rule 31 (T -> STRING .)


state 17

    (4) H -> T .

    ID              reduce using rule 4 (H -> T .)


state 18

    (5) H -> empty .

    ID              reduce using rule 5 (H -> empty .)


state 19

    (3) F -> FUNCTION H . ID LPAREN A RPAREN LLLAVE W RLLAVE

    ID              shift and go to state 28


state 20

    (36) S -> MMENOS ID . PYC

    PYC             shift and go to state 29


state 21

    (28) B -> VAR T . ID PYC

    ID              shift and go to state 30


state 22

    (19) B -> IF LPAREN . E RPAREN LLLAVE C RLLAVE
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 37
    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36

state 23

    (25) B -> DO LLLAVE . C RLLAVE WHILE LPAREN E RPAREN PYC
    (26) C -> . B C
    (27) C -> . empty
    (19) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (25) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (28) B -> . VAR T ID PYC
    (29) B -> . S
    (48) empty -> .
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    IF              shift and go to state 8
    DO              shift and go to state 9
    VAR             shift and go to state 6
    RLLAVE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    C                              shift and go to state 41
    empty                          shift and go to state 42
    B                              shift and go to state 40
    S                              shift and go to state 10

state 24

    (34) S -> PRINT LPAREN . E RPAREN PYC
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 43
    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36

state 25

    (20) S -> ID LPAREN . L RPAREN PYC
    (21) L -> . E Q
    (22) L -> . empty
    (37) E -> . NEG R
    (38) E -> . R
    (48) empty -> .
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    RPAREN          reduce using rule 48 (empty -> .)
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 44
    U                              shift and go to state 34
    empty                          shift and go to state 45
    R                              shift and go to state 35
    V                              shift and go to state 36
    L                              shift and go to state 46

state 26

    (30) S -> ID ASIG . E PYC
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 47
    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36

state 27

    (35) S -> PROMPT LPAREN ID . RPAREN PYC

    RPAREN          shift and go to state 48


state 28

    (3) F -> FUNCTION H ID . LPAREN A RPAREN LLLAVE W RLLAVE

    LPAREN          shift and go to state 49


state 29

    (36) S -> MMENOS ID PYC .

    IF              reduce using rule 36 (S -> MMENOS ID PYC .)
    DO              reduce using rule 36 (S -> MMENOS ID PYC .)
    VAR             reduce using rule 36 (S -> MMENOS ID PYC .)
    ID              reduce using rule 36 (S -> MMENOS ID PYC .)
    PRINT           reduce using rule 36 (S -> MMENOS ID PYC .)
    PROMPT          reduce using rule 36 (S -> MMENOS ID PYC .)
    MMENOS          reduce using rule 36 (S -> MMENOS ID PYC .)
    RLLAVE          reduce using rule 36 (S -> MMENOS ID PYC .)
    $end            reduce using rule 36 (S -> MMENOS ID PYC .)
    RETURN          reduce using rule 36 (S -> MMENOS ID PYC .)


state 30

    (28) B -> VAR T ID . PYC

    PYC             shift and go to state 50


state 31

    (46) V -> LPAREN . E RPAREN
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 51
    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36

state 32

    (45) V -> CADENA .

    SUM             reduce using rule 45 (V -> CADENA .)
    MENORQUE        reduce using rule 45 (V -> CADENA .)
    PYC             reduce using rule 45 (V -> CADENA .)
    COMA            reduce using rule 45 (V -> CADENA .)
    RPAREN          reduce using rule 45 (V -> CADENA .)


state 33

    (43) V -> ENTERO .

    SUM             reduce using rule 43 (V -> ENTERO .)
    MENORQUE        reduce using rule 43 (V -> ENTERO .)
    PYC             reduce using rule 43 (V -> ENTERO .)
    COMA            reduce using rule 43 (V -> ENTERO .)
    RPAREN          reduce using rule 43 (V -> ENTERO .)


state 34

    (39) R -> U . MENORQUE U
    (40) R -> U .

    MENORQUE        shift and go to state 52
    RPAREN          reduce using rule 40 (R -> U .)
    COMA            reduce using rule 40 (R -> U .)
    PYC             reduce using rule 40 (R -> U .)


state 35

    (38) E -> R .

    PYC             reduce using rule 38 (E -> R .)
    COMA            reduce using rule 38 (E -> R .)
    RPAREN          reduce using rule 38 (E -> R .)


state 36

    (41) U -> V . SUM U
    (42) U -> V .

    SUM             shift and go to state 53
    RPAREN          reduce using rule 42 (U -> V .)
    COMA            reduce using rule 42 (U -> V .)
    PYC             reduce using rule 42 (U -> V .)
    MENORQUE        reduce using rule 42 (U -> V .)


state 37

    (19) B -> IF LPAREN E . RPAREN LLLAVE C RLLAVE

    RPAREN          shift and go to state 54


state 38

    (44) V -> ID .
    (47) V -> ID . LPAREN L RPAREN

    SUM             reduce using rule 44 (V -> ID .)
    MENORQUE        reduce using rule 44 (V -> ID .)
    PYC             reduce using rule 44 (V -> ID .)
    COMA            reduce using rule 44 (V -> ID .)
    RPAREN          reduce using rule 44 (V -> ID .)
    LPAREN          shift and go to state 55


state 39

    (37) E -> NEG . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    U                              shift and go to state 34
    R                              shift and go to state 56
    V                              shift and go to state 36

state 40

    (26) C -> B . C
    (26) C -> . B C
    (27) C -> . empty
    (19) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (25) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (28) B -> . VAR T ID PYC
    (29) B -> . S
    (48) empty -> .
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    IF              shift and go to state 8
    DO              shift and go to state 9
    VAR             shift and go to state 6
    RLLAVE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    C                              shift and go to state 57
    empty                          shift and go to state 42
    B                              shift and go to state 40
    S                              shift and go to state 10

state 41

    (25) B -> DO LLLAVE C . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 58


state 42

    (27) C -> empty .

    RLLAVE          reduce using rule 27 (C -> empty .)


state 43

    (34) S -> PRINT LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 59


state 44

    (21) L -> E . Q
    (23) Q -> . COMA E Q
    (24) Q -> . empty
    (48) empty -> .

    COMA            shift and go to state 60
    RPAREN          reduce using rule 48 (empty -> .)

    empty                          shift and go to state 61
    Q                              shift and go to state 62

state 45

    (22) L -> empty .

    RPAREN          reduce using rule 22 (L -> empty .)


state 46

    (20) S -> ID LPAREN L . RPAREN PYC

    RPAREN          shift and go to state 63


state 47

    (30) S -> ID ASIG E . PYC

    PYC             shift and go to state 64


state 48

    (35) S -> PROMPT LPAREN ID RPAREN . PYC

    PYC             shift and go to state 65


state 49

    (3) F -> FUNCTION H ID LPAREN . A RPAREN LLLAVE W RLLAVE
    (6) A -> . T ID K
    (7) A -> . empty
    (31) T -> . STRING
    (32) T -> . BOOLEAN
    (33) T -> . INT
    (48) empty -> .

    STRING          shift and go to state 16
    BOOLEAN         shift and go to state 14
    INT             shift and go to state 15
    RPAREN          reduce using rule 48 (empty -> .)

    T                              shift and go to state 66
    empty                          shift and go to state 67
    A                              shift and go to state 68

state 50

    (28) B -> VAR T ID PYC .

    IF              reduce using rule 28 (B -> VAR T ID PYC .)
    DO              reduce using rule 28 (B -> VAR T ID PYC .)
    VAR             reduce using rule 28 (B -> VAR T ID PYC .)
    ID              reduce using rule 28 (B -> VAR T ID PYC .)
    PRINT           reduce using rule 28 (B -> VAR T ID PYC .)
    PROMPT          reduce using rule 28 (B -> VAR T ID PYC .)
    MMENOS          reduce using rule 28 (B -> VAR T ID PYC .)
    RLLAVE          reduce using rule 28 (B -> VAR T ID PYC .)
    $end            reduce using rule 28 (B -> VAR T ID PYC .)


state 51

    (46) V -> LPAREN E . RPAREN

    RPAREN          shift and go to state 69


state 52

    (39) R -> U MENORQUE . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    U                              shift and go to state 70
    V                              shift and go to state 36

state 53

    (41) U -> V SUM . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    U                              shift and go to state 71
    V                              shift and go to state 36

state 54

    (19) B -> IF LPAREN E RPAREN . LLLAVE C RLLAVE

    LLLAVE          shift and go to state 72


state 55

    (47) V -> ID LPAREN . L RPAREN
    (21) L -> . E Q
    (22) L -> . empty
    (37) E -> . NEG R
    (38) E -> . R
    (48) empty -> .
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    RPAREN          reduce using rule 48 (empty -> .)
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 44
    U                              shift and go to state 34
    empty                          shift and go to state 45
    R                              shift and go to state 35
    V                              shift and go to state 36
    L                              shift and go to state 73

state 56

    (37) E -> NEG R .

    PYC             reduce using rule 37 (E -> NEG R .)
    COMA            reduce using rule 37 (E -> NEG R .)
    RPAREN          reduce using rule 37 (E -> NEG R .)


state 57

    (26) C -> B C .

    RLLAVE          reduce using rule 26 (C -> B C .)


state 58

    (25) B -> DO LLLAVE C RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 74


state 59

    (34) S -> PRINT LPAREN E RPAREN . PYC

    PYC             shift and go to state 75


state 60

    (23) Q -> COMA . E Q
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 76
    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36

state 61

    (24) Q -> empty .

    RPAREN          reduce using rule 24 (Q -> empty .)


state 62

    (21) L -> E Q .

    RPAREN          reduce using rule 21 (L -> E Q .)


state 63

    (20) S -> ID LPAREN L RPAREN . PYC

    PYC             shift and go to state 77


state 64

    (30) S -> ID ASIG E PYC .

    IF              reduce using rule 30 (S -> ID ASIG E PYC .)
    DO              reduce using rule 30 (S -> ID ASIG E PYC .)
    VAR             reduce using rule 30 (S -> ID ASIG E PYC .)
    ID              reduce using rule 30 (S -> ID ASIG E PYC .)
    PRINT           reduce using rule 30 (S -> ID ASIG E PYC .)
    PROMPT          reduce using rule 30 (S -> ID ASIG E PYC .)
    MMENOS          reduce using rule 30 (S -> ID ASIG E PYC .)
    RLLAVE          reduce using rule 30 (S -> ID ASIG E PYC .)
    $end            reduce using rule 30 (S -> ID ASIG E PYC .)
    RETURN          reduce using rule 30 (S -> ID ASIG E PYC .)


state 65

    (35) S -> PROMPT LPAREN ID RPAREN PYC .

    IF              reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    DO              reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    VAR             reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    ID              reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    PRINT           reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    PROMPT          reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    MMENOS          reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    RLLAVE          reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    $end            reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)
    RETURN          reduce using rule 35 (S -> PROMPT LPAREN ID RPAREN PYC .)


state 66

    (6) A -> T . ID K

    ID              shift and go to state 78


state 67

    (7) A -> empty .

    RPAREN          reduce using rule 7 (A -> empty .)


state 68

    (3) F -> FUNCTION H ID LPAREN A . RPAREN LLLAVE W RLLAVE

    RPAREN          shift and go to state 79


state 69

    (46) V -> LPAREN E RPAREN .

    SUM             reduce using rule 46 (V -> LPAREN E RPAREN .)
    MENORQUE        reduce using rule 46 (V -> LPAREN E RPAREN .)
    PYC             reduce using rule 46 (V -> LPAREN E RPAREN .)
    COMA            reduce using rule 46 (V -> LPAREN E RPAREN .)
    RPAREN          reduce using rule 46 (V -> LPAREN E RPAREN .)


state 70

    (39) R -> U MENORQUE U .

    RPAREN          reduce using rule 39 (R -> U MENORQUE U .)
    COMA            reduce using rule 39 (R -> U MENORQUE U .)
    PYC             reduce using rule 39 (R -> U MENORQUE U .)


state 71

    (41) U -> V SUM U .

    RPAREN          reduce using rule 41 (U -> V SUM U .)
    COMA            reduce using rule 41 (U -> V SUM U .)
    PYC             reduce using rule 41 (U -> V SUM U .)
    MENORQUE        reduce using rule 41 (U -> V SUM U .)


state 72

    (19) B -> IF LPAREN E RPAREN LLLAVE . C RLLAVE
    (26) C -> . B C
    (27) C -> . empty
    (19) B -> . IF LPAREN E RPAREN LLLAVE C RLLAVE
    (25) B -> . DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC
    (28) B -> . VAR T ID PYC
    (29) B -> . S
    (48) empty -> .
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    IF              shift and go to state 8
    DO              shift and go to state 9
    VAR             shift and go to state 6
    RLLAVE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    empty                          shift and go to state 42
    B                              shift and go to state 40
    C                              shift and go to state 80
    S                              shift and go to state 10

state 73

    (47) V -> ID LPAREN L . RPAREN

    RPAREN          shift and go to state 81


state 74

    (25) B -> DO LLLAVE C RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 82


state 75

    (34) S -> PRINT LPAREN E RPAREN PYC .

    IF              reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    DO              reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    VAR             reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    ID              reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    $end            reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)
    RETURN          reduce using rule 34 (S -> PRINT LPAREN E RPAREN PYC .)


state 76

    (23) Q -> COMA E . Q
    (23) Q -> . COMA E Q
    (24) Q -> . empty
    (48) empty -> .

    COMA            shift and go to state 60
    RPAREN          reduce using rule 48 (empty -> .)

    empty                          shift and go to state 61
    Q                              shift and go to state 83

state 77

    (20) S -> ID LPAREN L RPAREN PYC .

    IF              reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    DO              reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    VAR             reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    ID              reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    PRINT           reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    PROMPT          reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    MMENOS          reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    RLLAVE          reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    $end            reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)
    RETURN          reduce using rule 20 (S -> ID LPAREN L RPAREN PYC .)


state 78

    (6) A -> T ID . K
    (8) K -> . COMA T ID K
    (9) K -> . empty
    (48) empty -> .

    COMA            shift and go to state 86
    RPAREN          reduce using rule 48 (empty -> .)

    K                              shift and go to state 84
    empty                          shift and go to state 85

state 79

    (3) F -> FUNCTION H ID LPAREN A RPAREN . LLLAVE W RLLAVE

    LLLAVE          shift and go to state 87


state 80

    (19) B -> IF LPAREN E RPAREN LLLAVE C . RLLAVE

    RLLAVE          shift and go to state 88


state 81

    (47) V -> ID LPAREN L RPAREN .

    SUM             reduce using rule 47 (V -> ID LPAREN L RPAREN .)
    MENORQUE        reduce using rule 47 (V -> ID LPAREN L RPAREN .)
    PYC             reduce using rule 47 (V -> ID LPAREN L RPAREN .)
    COMA            reduce using rule 47 (V -> ID LPAREN L RPAREN .)
    RPAREN          reduce using rule 47 (V -> ID LPAREN L RPAREN .)


state 82

    (25) B -> DO LLLAVE C RLLAVE WHILE LPAREN . E RPAREN PYC
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36
    E                              shift and go to state 89

state 83

    (23) Q -> COMA E Q .

    RPAREN          reduce using rule 23 (Q -> COMA E Q .)


state 84

    (6) A -> T ID K .

    RPAREN          reduce using rule 6 (A -> T ID K .)


state 85

    (9) K -> empty .

    RPAREN          reduce using rule 9 (K -> empty .)


state 86

    (8) K -> COMA . T ID K
    (31) T -> . STRING
    (32) T -> . BOOLEAN
    (33) T -> . INT

    STRING          shift and go to state 16
    BOOLEAN         shift and go to state 14
    INT             shift and go to state 15

    T                              shift and go to state 90

state 87

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE . W RLLAVE
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . S
    (48) empty -> .
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    RETURN          shift and go to state 92
    VAR             shift and go to state 93
    DO              shift and go to state 97
    IF              shift and go to state 96
    RLLAVE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    W                              shift and go to state 91
    empty                          shift and go to state 94
    D                              shift and go to state 95
    S                              shift and go to state 98

state 88

    (19) B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .

    IF              reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    DO              reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    VAR             reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    ID              reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    PRINT           reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    PROMPT          reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    MMENOS          reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    RLLAVE          reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)
    $end            reduce using rule 19 (B -> IF LPAREN E RPAREN LLLAVE C RLLAVE .)


state 89

    (25) B -> DO LLLAVE C RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 99


state 90

    (8) K -> COMA T . ID K

    ID              shift and go to state 100


state 91

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W . RLLAVE

    RLLAVE          shift and go to state 101


state 92

    (16) W -> RETURN . X PYC
    (17) X -> . empty
    (18) X -> . E
    (48) empty -> .
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    PYC             reduce using rule 48 (empty -> .)
    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 102
    X                              shift and go to state 103
    empty                          shift and go to state 104
    R                              shift and go to state 35
    V                              shift and go to state 36
    U                              shift and go to state 34

state 93

    (12) D -> VAR . T ID PYC
    (31) T -> . STRING
    (32) T -> . BOOLEAN
    (33) T -> . INT

    STRING          shift and go to state 16
    BOOLEAN         shift and go to state 14
    INT             shift and go to state 15

    T                              shift and go to state 105

state 94

    (11) W -> empty .

    RLLAVE          reduce using rule 11 (W -> empty .)


state 95

    (10) W -> D . W
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . S
    (48) empty -> .
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    RETURN          shift and go to state 92
    VAR             shift and go to state 93
    DO              shift and go to state 97
    IF              shift and go to state 96
    RLLAVE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    W                              shift and go to state 106
    empty                          shift and go to state 94
    D                              shift and go to state 95
    S                              shift and go to state 98

state 96

    (14) D -> IF . LPAREN E RPAREN LLLAVE W RLLAVE

    LPAREN          shift and go to state 107


state 97

    (13) D -> DO . LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC

    LLLAVE          shift and go to state 108


state 98

    (15) D -> S .

    RETURN          reduce using rule 15 (D -> S .)
    VAR             reduce using rule 15 (D -> S .)
    DO              reduce using rule 15 (D -> S .)
    IF              reduce using rule 15 (D -> S .)
    ID              reduce using rule 15 (D -> S .)
    PRINT           reduce using rule 15 (D -> S .)
    PROMPT          reduce using rule 15 (D -> S .)
    MMENOS          reduce using rule 15 (D -> S .)
    RLLAVE          reduce using rule 15 (D -> S .)


state 99

    (25) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 109


state 100

    (8) K -> COMA T ID . K
    (8) K -> . COMA T ID K
    (9) K -> . empty
    (48) empty -> .

    COMA            shift and go to state 86
    RPAREN          reduce using rule 48 (empty -> .)

    K                              shift and go to state 110
    empty                          shift and go to state 85

state 101

    (3) F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE .

    $end            reduce using rule 3 (F -> FUNCTION H ID LPAREN A RPAREN LLLAVE W RLLAVE .)


state 102

    (18) X -> E .

    PYC             reduce using rule 18 (X -> E .)


state 103

    (16) W -> RETURN X . PYC

    PYC             shift and go to state 111


state 104

    (17) X -> empty .

    PYC             reduce using rule 17 (X -> empty .)


state 105

    (12) D -> VAR T . ID PYC

    ID              shift and go to state 112


state 106

    (10) W -> D W .

    RLLAVE          reduce using rule 10 (W -> D W .)


state 107

    (14) D -> IF LPAREN . E RPAREN LLLAVE W RLLAVE
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    E                              shift and go to state 113
    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36

state 108

    (13) D -> DO LLLAVE . W RLLAVE WHILE LPAREN E RPAREN PYC
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . S
    (48) empty -> .
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    RETURN          shift and go to state 92
    VAR             shift and go to state 93
    DO              shift and go to state 97
    IF              shift and go to state 96
    RLLAVE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    W                              shift and go to state 114
    empty                          shift and go to state 94
    D                              shift and go to state 95
    S                              shift and go to state 98

state 109

    (25) B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .

    IF              reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    DO              reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)
    $end            reduce using rule 25 (B -> DO LLLAVE C RLLAVE WHILE LPAREN E RPAREN PYC .)


state 110

    (8) K -> COMA T ID K .

    RPAREN          reduce using rule 8 (K -> COMA T ID K .)


state 111

    (16) W -> RETURN X PYC .

    RLLAVE          reduce using rule 16 (W -> RETURN X PYC .)


state 112

    (12) D -> VAR T ID . PYC

    PYC             shift and go to state 115


state 113

    (14) D -> IF LPAREN E . RPAREN LLLAVE W RLLAVE

    RPAREN          shift and go to state 116


state 114

    (13) D -> DO LLLAVE W . RLLAVE WHILE LPAREN E RPAREN PYC

    RLLAVE          shift and go to state 117


state 115

    (12) D -> VAR T ID PYC .

    RETURN          reduce using rule 12 (D -> VAR T ID PYC .)
    VAR             reduce using rule 12 (D -> VAR T ID PYC .)
    DO              reduce using rule 12 (D -> VAR T ID PYC .)
    IF              reduce using rule 12 (D -> VAR T ID PYC .)
    ID              reduce using rule 12 (D -> VAR T ID PYC .)
    PRINT           reduce using rule 12 (D -> VAR T ID PYC .)
    PROMPT          reduce using rule 12 (D -> VAR T ID PYC .)
    MMENOS          reduce using rule 12 (D -> VAR T ID PYC .)
    RLLAVE          reduce using rule 12 (D -> VAR T ID PYC .)


state 116

    (14) D -> IF LPAREN E RPAREN . LLLAVE W RLLAVE

    LLLAVE          shift and go to state 118


state 117

    (13) D -> DO LLLAVE W RLLAVE . WHILE LPAREN E RPAREN PYC

    WHILE           shift and go to state 119


state 118

    (14) D -> IF LPAREN E RPAREN LLLAVE . W RLLAVE
    (10) W -> . D W
    (11) W -> . empty
    (16) W -> . RETURN X PYC
    (12) D -> . VAR T ID PYC
    (13) D -> . DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC
    (14) D -> . IF LPAREN E RPAREN LLLAVE W RLLAVE
    (15) D -> . S
    (48) empty -> .
    (20) S -> . ID LPAREN L RPAREN PYC
    (30) S -> . ID ASIG E PYC
    (34) S -> . PRINT LPAREN E RPAREN PYC
    (35) S -> . PROMPT LPAREN ID RPAREN PYC
    (36) S -> . MMENOS ID PYC

    RETURN          shift and go to state 92
    VAR             shift and go to state 93
    DO              shift and go to state 97
    IF              shift and go to state 96
    RLLAVE          reduce using rule 48 (empty -> .)
    ID              shift and go to state 12
    PRINT           shift and go to state 11
    PROMPT          shift and go to state 2
    MMENOS          shift and go to state 5

    empty                          shift and go to state 94
    S                              shift and go to state 98
    D                              shift and go to state 95
    W                              shift and go to state 120

state 119

    (13) D -> DO LLLAVE W RLLAVE WHILE . LPAREN E RPAREN PYC

    LPAREN          shift and go to state 121


state 120

    (14) D -> IF LPAREN E RPAREN LLLAVE W . RLLAVE

    RLLAVE          shift and go to state 122


state 121

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN . E RPAREN PYC
    (37) E -> . NEG R
    (38) E -> . R
    (39) R -> . U MENORQUE U
    (40) R -> . U
    (41) U -> . V SUM U
    (42) U -> . V
    (43) V -> . ENTERO
    (44) V -> . ID
    (45) V -> . CADENA
    (46) V -> . LPAREN E RPAREN
    (47) V -> . ID LPAREN L RPAREN

    NEG             shift and go to state 39
    ENTERO          shift and go to state 33
    ID              shift and go to state 38
    CADENA          shift and go to state 32
    LPAREN          shift and go to state 31

    U                              shift and go to state 34
    R                              shift and go to state 35
    V                              shift and go to state 36
    E                              shift and go to state 123

state 122

    (14) D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .

    RETURN          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    VAR             reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    DO              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    IF              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    ID              reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    PRINT           reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    PROMPT          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    MMENOS          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)
    RLLAVE          reduce using rule 14 (D -> IF LPAREN E RPAREN LLLAVE W RLLAVE .)


state 123

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E . RPAREN PYC

    RPAREN          shift and go to state 124


state 124

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN . PYC

    PYC             shift and go to state 125


state 125

    (13) D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .

    RETURN          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    VAR             reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    DO              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    IF              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    ID              reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    PRINT           reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    PROMPT          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    MMENOS          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)
    RLLAVE          reduce using rule 13 (D -> DO LLLAVE W RLLAVE WHILE LPAREN E RPAREN PYC .)

